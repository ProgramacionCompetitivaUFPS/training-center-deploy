version: '3'
services:
  frontend:
    build: "frontend"
    image: "frontend"
    container_name: "training-center-frontend"
    volumes:
      - "./frontend:/app"
    ports:
      - "${FRONTEND_PORT}:9000"
    depends_on:
      - backend

  backend:
    build: "backend"
    image: "backend"
    restart: "always"
    container_name: "training-center-backend"
    environment:
      - "NODE_ENV=${NODE_ENV}"
      - "DATABASE_URL=${DATABASE_URL}"
      - "SECRET_TOKEN=${SECRET_TOKEN}"
      - "SMTP_HOST=${SMTP_HOST}"
      - "SMTP_USER=${SMTP_USER}"
      - "SMTP_PASSWORD=${SMTP_PASSWORD}"
      - "FROM_ACCOUNT=${FROM_ACCOUNT}"
      - "SMTP_SERVICE=${SMTP_SERVICE}"
      - "SMTP_PORT=${SMTP_PORT}"
    volumes:
      - "${FILES}:/usr/src/app/files"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./backend:/usr/src/app"
    ports:
      - "${BACKEND_PORT}:8081"
    depends_on:
      - cpp
      - java
      - python

  cpp:
    build: "grading/cpp"
    image: "cpp_image"
    container_name: "cppSandbox"
    volumes:
      - "${FILES}:/files"
    tty: true

  java:
    build: "grading/java"
    image: "java_image"
    restart: "always"
    container_name: "javaSandbox"
    volumes:
      - "${FILES}:/files"
    tty: true

  python:
    build: "grading/python"
    image: "python_image"
    restart: "always"
    container_name: "pythonSandbox"
    volumes:
      - "${FILES}:/files"
    tty: true

