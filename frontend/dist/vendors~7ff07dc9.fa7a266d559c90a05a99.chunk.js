(window.webpackJsonp=window.webpackJsonp||[]).push([[40,6],{"modules/recovery/recovery-password":function(e,s,t){"use strict";t.r(s),t.d(s,"RecoveryPassword",(function(){return o}));var a,i=t("aurelia-framework"),l=t("oHge"),r=t("W1ll");let o=Object(i.f)(r.a,r.b)(a=class{constructor(e,s){this.alertService=e,this.authService=s,this.email=""}requestRecovery(){""!==this.email&&this.authService.requestRecovery(this.email).then(()=>{this.alertService.showMessage(l.b.recoveryEmailSent)}).catch(e=>{switch(e.status){case 400:this.alertService.showMessage(l.b.recoveryMailDoesNotExist);break;case 500:this.alertService.showMessage(l.b.serverError);break;default:this.alertService.showMessage(l.b.unknownError)}})}})||a},"modules/recovery/recovery-password.html":function(e,s,t){var a='<template> <div slot="content"> <div class="col-12 text-center"> <img class="ufps-logo-sign" src="'+t("Rxnk")(t("ACFg"))+'" alt=""> </div> <div class="col-10 offset-1 text-center"> <h1>Nueva contraseña</h1> <form submit.delegate="requestRecovery()" class="text-left ufps-form-sign"> <div class="form-group"> <label for="email">Correo Electrónico</label> <input type="email" class="form-control ufps-sign-input" id="email" placeholder="Email" value.bind="email" required> </div> <input type="submit" class="btn ufps-btn-sign" value="Recuperar contraseña"> </form> <div class="col-4 text-left ufps-sign-links"> <a route-href="route: signin">Regístrate</a> </div> <div class="col-8 text-right ufps-sign-links"> <a route-href="route: login">Inicia Sesión</a> </div> </div> </div> </template>';e.exports=a},"modules/recovery/reset-password":function(e,s,t){"use strict";t.r(s),t.d(s,"ResetPassword",(function(){return d}));var a,i=t("aurelia-framework"),l=t("4ysu"),r=t("oHge"),o=t("x4W3"),n=t("W1ll");let d=Object(i.f)(n.a,n.b,l.d)(a=class{constructor(e,s,t){this.alertService=e,this.authorizationService=s,this.router=t,this.user=new o.i,this.tokenValid=!1}activate(e,s){this.routeConfig=s,this.user.token=e.token;try{this.user.email=this.authorizationService.validateResetToken(this.user.token),this.tokenValid=!0}catch(e){"invalid token"===e.message?this.alertService.showMessage(r.b.recoveryInvalidToken):"expired token"===e.message&&this.alertService.showMessage(r.b.recoveryExpiredToken),this.router.navigate("recuperar-password")}}requestResetPassword(){""!==this.user.password&&this.user.confirmPassword===this.user.password?this.authorizationService.resetPassword(this.user).then(()=>{this.alertService.showMessage(r.b.recoveryCorrect),this.router.navigate("bienvenido")}).catch(e=>{switch(e.status){case 400:this.alertService.showMessage(r.b.recoveryDifferentPasswords),this.user.password="",this.user.confirmPassword="";break;case 500:this.alertService.showMessage(r.b.serverError);break;default:this.alertService.showMessage(r.b.unknownError)}}):(this.alertService.showMessage(r.b.recoveryDifferentPasswords),this.user.password="",this.user.confirmPassword="")}})||a},"modules/recovery/reset-password.html":function(e,s,t){var a='<template> <div slot="content"> <div class="col-12 text-center"> <img class="ufps-logo-sign" src="'+t("Rxnk")(t("ACFg"))+'" alt=""> </div> <div class="col-10 offset-1 text-center"> <h1>Nueva contraseña</h1> <form submit.delegate="requestResetPassword()" class="text-left ufps-form-sign"> <div class="form-group"> <label for="email">Correo Electrónico</label> <input type="email" class="form-control ufps-sign-input" id="email" placeholder="Email" value.bind="user.email" required disabled="disabled"> </div> <div class="form-group"> <label for="password">Nueva Contraseña</label> <input type="password" class="form-control ufps-sign-input" id="password" placeholder="Contraseña" value.bind="user.password" required disabled.bind="!tokenValid"> </div> <div class="form-group"> <label for="password">Repite la contraseña</label> <input type="password" class="form-control ufps-sign-input" id="password2" placeholder="Repite la contraseña" value.bind="user.confirmPassword" required disabled.bind="!tokenValid"> </div> <input type="submit" class="btn ufps-btn-sign" value="Cambiar contraseña"> </form> </div> </div> </template>';e.exports=a},"modules/search/search":function(e,s,t){"use strict";t.r(s),t.d(s,"Search",(function(){return m}));var a,i,l,r,o=t("aurelia-framework"),n=t("4ysu"),d=t("oHge"),c=t("x4W3"),u=t("W1ll");function b(e,s,t,a){t&&Object.defineProperty(e,s,{enumerable:t.enumerable,configurable:t.configurable,writable:t.writable,value:t.initializer?t.initializer.call(a):void 0})}function h(e,s,t,a,i){var l={};return Object.keys(a).forEach((function(e){l[e]=a[e]})),l.enumerable=!!l.enumerable,l.configurable=!!l.configurable,("value"in l||l.initializer)&&(l.writable=!0),l=t.slice().reverse().reduce((function(t,a){return a(e,s,t)||t}),l),i&&void 0!==l.initializer&&(l.value=l.initializer?l.initializer.call(i):void 0,l.initializer=void 0),void 0===l.initializer&&(Object.defineProperty(e,s,l),l=null),l}let m=Object(o.f)(u.a,n.d,u.i)((l=h((i=class{constructor(e,s,t){b(this,"page",l,this),b(this,"filterChange",r,this),this.alertService=e,this.routerService=s,this.problemService=t,this.totalPages=1,this.page=1,this.numberOfItems=[10,20,30,50],this.sortOptions=["Id","Nombre","Dificultad"],this.filterChange=!1,this.dataLoaded=!1,this.limit=10,this.sort="Id",this.by="Ascendente",this.language="Cualquier idioma",this.pagination=[],this.problems=[],this.enums=c.d,this.typeCategory=this.enums.typeCategory.university}activate(e,s){this.routeConfig=s,this.query=e.query.replace(/\+/g," "),this.typeCategory=this.enums.typeCategory.getId(this.query),"colegio"!==this.query&&"universidad"!==this.query||(this.query=" "),this.getQuery()}filterChangeChanged(e,s){void 0!==s&&this.getQuery()}pageChanged(e,s){void 0!==s&&this.getQuery()}getQuery(){let e;e="Español"===this.language?"es":"Inglés"===this.language?"en":"es",this.problemService.searchProblems(this.query,this.page,this.limit,"Nombre"===this.sort?"name":"Dificultad"===this.sort?"level":void 0,"Ascendente"===this.by?"asc":"desc",e,this.typeCategory).then(e=>{if(this.totalPages=e.meta.totalPages,this.problems=[],this.dataLoaded=!0,this.totalPages>0)for(let s=0;s<e.data.length;s++){let t=new c.f(e.data[s].id,e.data[s].title_en,e.data[s].title_es,e.data[s].level);t.categoryType=e.data[s].category.type,this.problems.push(t),e.data[s].submissions.length>0&&(this.problems[s].resolved=!0)}}).catch(e=>{401===e.status?this.alertService.showMessage(d.b.permissionsError):this.alertService.showMessage(d.b.unknownError)})}}).prototype,"page",[o.h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),r=h(i.prototype,"filterChange",[o.h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),a=i))||a},"modules/search/search.html":function(e,s,t){e.exports='<template> <require from="../../resources/elements/filter"></require> <require from="../../resources/elements/paginator"></require> <div slot="content" class="body-slot"> <div class="container"> <h2 if.bind="query !== \' \'" class="text-right">Resultados para "${query}"</h2> <h2 if.bind="query === \' \'" class="text-right">Problemas</h2> <p if.bind="query === \' \'" class="ufps-language text-right"> <a if.bind="typeCategory === enums.typeCategory.university" href="problemas"><span class="active">Categorías</span></a> <a if.bind="typeCategory === enums.typeCategory.school" href="problemas/colegios"><span class="active">Categorías</span></a> | <span class="active selected">Lista completa</span> </p> <hr> <filter number-of-items.bind="numberOfItems" sort-options.bind="sortOptions" filter-change.bind="filterChange" limit.bind="limit" sort.bind="sort" by.bind="by" text-to-show.bind="\'problemas\'" language-flag.bind="true" language.bind="language"></filter> <table> <thead> <tr> <th class="text-center" style="width:5%">Id</th> <th class="text-center" style="width:70%">Problema</th> <th class="text-center" style="width:70%">Tipo</th> <th class="text-center" style="width:10%">Dificultad</th> <th class="text-center" style="width:15%">Idioma</th> </tr> </thead> <tbody> <tr repeat.for="problem of problems"> <td class="text-center">${problem.id}</td> <td class="text-left ufps-td-problem"> <p if.bind="problem.isInSpanish() && language !== \'Inglés\'" class="ufps-name-problem-list"> <a if.bind="problem.categoryType === enums.typeCategory.school" href="/problemas/colegios/${problem.id}/detalle/es">${problem.titleES}</a> <a if.bind="problem.categoryType === enums.typeCategory.university " href="/problemas/${problem.id}/detalle/es">${problem.titleES}</a> </p> <p if.bind="!problem.isInSpanish() || (problem.isInEnglish() && language === \'Inglés\')" class="ufps-name-problem-list"> <a if.bind="problem.categoryType === enums.typeCategory.university" href="/problemas/${problem.id}/detalle/en">${problem.titleEN}</a> <a if.bind="problem.categoryType === enums.typeCategory.school" href="/problemas/colegios/${problem.id}/detalle/en">${problem.titleEN}</a> </p> <span if.bind="problem.resolved" class="ufps-edit-problem-list fas fa-check" data-toggle="tooltip" title="Ya solucionaste este problema" tooltip></span> </td> <td class="text-center">${enums.typeCategory.getNameSpanish(problem.categoryType)}</td> <td class="text-center">${problem.level}</td> <td class="text-center ufps-language"> <span class="${problem.isInSpanish() ? \'active\' : \'inactive\'}"> <a if.bind="problem.categoryType === enums.typeCategory.school" href="/problemas/colegios/${problem.id}/detalle/es">ES</a> <a if.bind="problem.categoryType === enums.typeCategory.university" href="/problemas/${problem.id}/detalle/es">ES</a> </span> | <span class="${problem.isInEnglish() ? \'active\' : \'inactive\'}"> <a if.bind="problem.categoryType === enums.typeCategory.university" href="/problemas/${problem.id}/detalle/en">EN</a> <a if.bind="problem.categoryType === enums.typeCategory.school" href="/problemas/colegios/${problem.id}/detalle/en">EN</a> </span> </td> </tr> <tr if.bind="problems.length === 0 && dataLoaded"> <td colspan="5">Ningun problema coincide con el criterio de búsqueda</td> </tr> <tr if.bind="!dataLoaded"> <td colspan="4">Cargando resultados para "${query}"...</td> </tr> </tbody> </table> <paginator page.bind="page" total-pages.bind="totalPages"></paginator> </div> </div> </template>'},"modules/submissions/submissions":function(e,s,t){"use strict";t.r(s),function(e){t.d(s,"Submissions",(function(){return h}));var a,i,l,r,o=t("aurelia-framework"),n=t("oHge"),d=t("x4W3"),c=t("W1ll");function u(e,s,t,a){t&&Object.defineProperty(e,s,{enumerable:t.enumerable,configurable:t.configurable,writable:t.writable,value:t.initializer?t.initializer.call(a):void 0})}function b(e,s,t,a,i){var l={};return Object.keys(a).forEach((function(e){l[e]=a[e]})),l.enumerable=!!l.enumerable,l.configurable=!!l.configurable,("value"in l||l.initializer)&&(l.writable=!0),l=t.slice().reverse().reduce((function(t,a){return a(e,s,t)||t}),l),i&&void 0!==l.initializer&&(l.value=l.initializer?l.initializer.call(i):void 0,l.initializer=void 0),void 0===l.initializer&&(Object.defineProperty(e,s,l),l=null),l}let h=Object(o.f)(c.a,c.b,c.i,c.j)((l=b((i=class{constructor(e,s,t,a){u(this,"page",l,this),u(this,"filterChange",r,this),this.alertService=e,this.problemService=t,this.authService=s,this.rankingService=a,this.numberOfItems=[10,15,20],this.sortOptions=["Fecha","Dificultad","Tiempo de ejecución"],this.filterChange=!1,this.submissions=[],this.limit=10,this.sort="Fecha",this.by="Descendente",this.page=1,this.downloadActive=!1,this.totalPages=1,this.isABlocklyCode=!1,this.veredictOptions=[{value:"ALL",text:"Cualquier veredicto"},{value:"ACC",text:"Correcto"},{value:"TL",text:"Tiempo límite excedido"},{value:"WA",text:"Respuesta incorrecta"},{value:"RT",text:"Error en tiempo de ejecución"},{value:"CE",text:"Error de compilación"}],this.veredict=this.veredictOptions[0],this.downloadMesagge="Descargar código",this.enums=d.d,this.getSubmissions(),this.logsMessagge="No hay mensajes para mostrar"}setVeredict(e){this.veredict=e,this.getSubmissions()}filterChangeChanged(e,s){void 0!==s&&this.getSubmissions()}pageChanged(e,s){void 0!==s&&this.getSubmissions()}getSubmissions(){let e;e="Tiempo de ejecución"===this.sort?"time":"Dificultad"===this.sort?"level":"date";let s=this.veredict.value;"ALL"===s&&(s=null),this.rankingService.getSubmissions(this.authService.getUserId(),this.limit,this.page,"Ascendente"===this.by?"ASC":"DESC",e,s).then(e=>{this.totalPages=e.meta.totalPages,this.submissions=[],e.meta.totalItems>0&&(this.submissions=e.data)}).catch(e=>{401===e.status||403===e.status?this.alertService.showMessage(n.b.permissionsError):500===e.status?this.alertService.showMessage(n.b.serverError):this.alertService.showMessage(n.b.unknownError)})}showDate(e){let s=new Date(e);return this.getDate(s)+" - "+this.getTime(s)}getDate(e){return e.getDate()+" de "+["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"][e.getMonth()]+" del "+e.getFullYear()}getTime(e){let s="";return e.getHours()<=12?s+=e.getHours()+":":e.getHours()>12&&(s+=e.getHours()-12+":"),s+=(e.getMinutes()<10?"0":"")+e.getMinutes(),e.getHours()<12?s+="AM":s+="PM",s}mapVeredict(e){return"in queue"===e?"En espera":"running"===e?"Ejecutando":"Accepted"===e?"Correcto":"Compilation Error"===e?"Error de compilación":"Time Limit Exceeded"===e?"Tiempo limite excedido":"Runtime Error"===e?"Error en tiempo de ejecución":"Wrong Answer"===e?"Respuesta equivocada":void 0}toFixed(e){return parseFloat(e).toFixed(3)}viewCode(s){this.downloadActive=!1,this.submissionLoaded=s,this.submissionLoaded.code="Cargando código...",e("#submission-detail").modal("show"),this.problemService.getSubmission(this.submissionLoaded.file_name).then(e=>{this.codeDownload=e,this.downloadActive=!0;let t=new FileReader;t.onload=()=>{void 0!==s.blockly_file_name&&null!==s.blockly_file_name?(this.downloadMesagge="Descargar código (Python)",this.isABlocklyCode=!0,this.viewSvgSubmission(s)):(this.downloadMesagge="Descargar código",this.isABlocklyCode=!1,this.submissionLoaded.code=t.result)},t.readAsText(e)}).catch(e=>{401===e.status||403===e.status?this.alertService.showMessage(n.b.permissionsError):500===e.status?this.alertService.showMessage(n.b.serverError):this.alertService.showMessage(n.b.unknownError)}),this.viewLogs(),this.showLogs(0)}viewSvgSubmission(e){this.problemService.getSvgSubmission(this.submissionLoaded.blockly_file_name).then(e=>{this.submissionLoaded.svgUrl=URL.createObjectURL(e)}).catch(e=>{401===e.status||403===e.status?this.alertService.showMessage(n.b.permissionsError):500===e.status?this.alertService.showMessage(n.b.serverError):this.alertService.showMessage(n.b.unknownError)})}downloadCode(){let e;if(e="Java"===this.submissionLoaded.language?"Main.java":"C++"===this.submissionLoaded.language?"main.cpp":"main.py",window.navigator.msSaveOrOpenBlob)window.navigator.msSaveBlob(this.codeDownload,e);else{let s=window.document.createElement("a");s.href=window.URL.createObjectURL(this.codeDownload),s.download=e,document.body.appendChild(s),s.click(),document.body.removeChild(s)}}viewLogs(){this.logsMessagge="No hay mensajes para mostrar";let e="";"Compilation Error"==this.submissionLoaded.verdict?e=".out":"Runtime Error"==this.submissionLoaded.verdict&&(e=".err"),""!=e&&this.problemService.getSubmissionLog(this.submissionLoaded.file_name.split(".")[0]+e).then(e=>{let s=new FileReader;s.onload=()=>{null!=s.result&&(this.logsMessagge=s.result)},s.readAsText(e)}).catch(e=>{401===e.status||403===e.status?this.alertService.showMessage(n.b.permissionsError):500===e.status?this.alertService.showMessage(n.b.serverError):this.alertService.showMessage(n.b.unknownError)})}showLogs(e){document.getElementById("logs-detail").textContent=this.logsMessagge,document.getElementById("code-detail").style.display=e?"none":"block",document.getElementById("view-logs-btn").style.display=e?"none":"block",document.getElementById("view-code-btn").style.display=e?"block":"none",document.getElementById("code-download-btn").style.display=e?"none":"block",document.getElementById("log-detail").style.display=e?"block":"none"}}).prototype,"page",[o.h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),r=b(i.prototype,"filterChange",[o.h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),a=i))||a}.call(this,t("EVdn"))},"modules/submissions/submissions.html":function(e,s,t){e.exports='<template> <require from="../../resources/elements/filter"></require> <require from="../../resources/elements/paginator"></require> <div slot="content" class="body-slot"> <div class="container" if.bind="authService.isCoach() || authService.isStudent()"> <h1 class="text-right">Mis envios</h1> <div class="col-lg-12"> <hr> Mostrar solo envios con veredicto: <div class="dropdown dropdown-inline ufps-dropdown"> <button class="btn dropdown-toggle" type="button" id="selectVeredict" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"> ${veredict.text} <span class="caret"></span> </button> <ul class="dropdown-menu ufps-dropdown-menu dropdown-mini" aria-labelledby="selectVeredict"> <li repeat.for="i of veredictOptions"> <a click.delegate="setVeredict(i)">${i.text}</a> </li> </ul> </div> <div class="fix"></div> </div> <filter number-of-items.bind="numberOfItems" sort-options.bind="sortOptions" filter-change.bind="filterChange" limit.bind="limit" sort.bind="sort" by.bind="by" text-to-show.bind="\'envios\'" language-flag.bind="false"> </filter> <table> <thead> <tr> <th class="text-center">Problema</th> <th class="text-center">Dificultad</th> <th class="text-center">Fecha de envio</th> <th class="text-center">Veredicto</th> <th class="text-center">Tiempo de ejecución</th> <th class="text-center">Lenguaje</th> <th class="text-center">Código</th> </tr> </thead> <tbody> <tr repeat.for="submission of submissions"> <td class="text-center"> <p if.bind="submission.problem.title_es !== null" class="ufps-name-problem-list ufps-name-problem-list-l"> <a if.bind="submission.problem.category.type == enums.typeCategory.school" href="/problemas/colegios/${submission.problem.id}/detalle/es">${submission.problem.title_es}</a> <a if.bind="submission.problem.category.type == enums.typeCategory.university" href="/problemas/${submission.problem.id}/detalle/es">${submission.problem.title_es}</a> </p> <p if.bind="submission.problem.title_es === null" class="ufps-name-problem-list ufps-name-problem-list-l"> <a f.bind="submission.problem.category.type == enums.typeCategory.school" href="/problemas/colegios/${submission.problem.id}/detalle/en">${submission.problem.title_en}</a> <a if.bind="submission.problem.category.type == enums.typeCategory.university" href="/problemas/${submission.problem.id}/detalle/en">${submission.problem.title_en}</a> </p> </td> <td class="text-center">${submission.problem.level}</td> <td class="text-center">${showDate(submission.created_at)}</td> <td class="text-center" if.bind="submission.status !== \'executed\'">${mapVeredict(submission.status)}</td> <td class="text-center" if.bind="submission.status === \'executed\'">${mapVeredict(submission.verdict)}</td> <td class="text-center">${toFixed(submission.execution_time)}s</td> <td class="text-center">${submission.language}</td> <td class="text-center"> <p class="ufps-name-problem-list ufps-name-problem-list-l"> <a click.delegate="viewCode(submission)">Ver código</a> </p> </td> </tr> <tr if.bind="submissions.length === 0"> <td colspan="7">No has realizado ningún envio.</td> </tr> </tbody> </table> <paginator page.bind="page" total-pages.bind="totalPages"></paginator> </div> <div class="modal fade" id="submission-detail" ref="submissionDetail" tabindex="-1" role="dialog" aria-labelledby="submission-detail"> <div class="modal-dialog modal-lg" role="document"> <div class="modal-content"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button> <table> <thead> <tr> <th class="text-center">Problema</th> <th class="text-center">Dificultad</th> <th class="text-center">Fecha de envio</th> <th class="text-center">Veredicto</th> <th class="text-center">Tiempo de ejecución</th> <th class="text-center">Lenguaje</th> </tr> </thead> <tbody> <tr> <td class="text-center"> <p if.bind="submissionLoaded.problem.title_es !== null" class="ufps-name-problem-list ufps-name-problem-list-l"> <a if.bind="submissionLoaded.problem.category.type == enums.typeCategory.school" href="/problemas/colegios/${submissionLoaded.problem.id}/detalle/es">${submissionLoaded.problem.title_es}</a> <a if.bind="submissionLoaded.problem.category.type != enums.typeCategory.school" href="/problemas/${submissionLoaded.problem.id}/detalle/es">${submissionLoaded.problem.title_es}</a> </p> <p if.bind="submissionLoaded.problem.title_es === null" class="ufps-name-problem-list ufps-name-problem-list-l"> <a if.bind="submissionLoaded.problem.category.type == enums.typeCategory.school" href="/problemas/colegios/${submissionLoaded.problem.id}/detalle/en">${submissionLoaded.problem.title_es}</a> <a if.bind="submissionLoaded.problem.category.type != enums.typeCategory.school" href="/problemas/${submissionLoaded.problem.id}/detalle/en">${submissionLoaded.problem.title_en}</a> </p> </td> <td class="text-center">${submissionLoaded.problem.level}</td> <td class="text-center">${showDate(submissionLoaded.created_at)}</td> <td class="text-center" if.bind="submissionLoaded.status !== \'executed\'"> ${mapVeredict(submissionLoaded.status)}</td> <td class="text-center" if.bind="submissionLoaded.status === \'executed\'"> ${mapVeredict(submissionLoaded.verdict)}</td> <td class="text-center">${toFixed(submissionLoaded.execution_time)}s</td> <td class="text-center">${submissionLoaded.language}</td> </tr> <tr> <td colspan="6"> <div class="col-12 text-center" id="code-download-btn"> <a click.delegate="downloadCode()" class="btn btn-secondary ufps-btn ufps-btn-secondary text-center" if.bind="downloadActive">${downloadMesagge}</a> <div class="ufps-separator-mini"></div> </div> <div id="code-detail" class="col-12"> <div show.bind="!isABlocklyCode"> <pre>\r\n                            <code> ${submissionLoaded.code} </code>\r\n                        </pre> </div> <div show.bind="isABlocklyCode"> <img src="${submissionLoaded.svgUrl}"> </div> </div> <div class="col-12" id="log-detail"> <pre>\r\n                        <code id="logs-detail">${logsMessage}</code>\r\n                      </pre> </div> <div class="col-12 text-center" id="view-logs-btn"> <a click.delegate="showLogs(1)" class="btn btn-secondary ufps-btn ufps-btn-secondary text-center"> Ver Errores </a> <div class="ufps-separator-mini"></div> </div> <div class="col-12 text-center" id="view-code-btn" style="display:none"> <a click.delegate="showLogs(0)" class="btn btn-secondary ufps-btn ufps-btn-secondary text-center"> Ver Codigo </a> <div class="ufps-separator-mini"></div> </div> </td> </tr> </tbody> </table> </div> </div> </div> </div> </div> </template>'},"modules/syllabus/assignment-detail/assignment-detail":function(e,s,t){"use strict";t.r(s),function(e){t.d(s,"AssignmentDetail",(function(){return h}));var a,i,l,r,o=t("aurelia-framework"),n=t("oHge"),d=t("x4W3"),c=t("W1ll");function u(e,s,t,a){t&&Object.defineProperty(e,s,{enumerable:t.enumerable,configurable:t.configurable,writable:t.writable,value:t.initializer?t.initializer.call(a):void 0})}function b(e,s,t,a,i){var l={};return Object.keys(a).forEach((function(e){l[e]=a[e]})),l.enumerable=!!l.enumerable,l.configurable=!!l.configurable,("value"in l||l.initializer)&&(l.writable=!0),l=t.slice().reverse().reduce((function(t,a){return a(e,s,t)||t}),l),i&&void 0!==l.initializer&&(l.value=l.initializer?l.initializer.call(i):void 0,l.initializer=void 0),void 0===l.initializer&&(Object.defineProperty(e,s,l),l=null),l}let h=Object(o.f)(c.a,c.i,c.k)((l=b((i=class{constructor(e,s,t){u(this,"page",l,this),u(this,"filterChange",r,this),this.alertService=e,this.syllabusService=t,this.problemService=s,this.assignment=new d.a,this.numberOfItems=[10,15,20],this.sortOptions=["Fecha","Tiempo de ejecución"],this.filterChange=!1,this.limit=10,this.sort="Fecha",this.by="Descendente",this.page=1,this.downloadActive=!1,this.totalPages=1,this.problem="",this.veredictOptions=[{value:"ALL",text:"Cualquier veredicto"},{value:"ACC",text:"Correcto"},{value:"TL",text:"Tiempo límite excedido"},{value:"WA",text:"Respuesta incorrecta"},{value:"RT",text:"Error en tiempo de ejecución"},{value:"CE",text:"Error de compilación"}],this.veredict=this.veredictOptions[0],this.veredicts={labels:["Correcto","Tiempo limite excedido","Error en tiempo de ejecución","Error de compilación","Respuesta incorrecta"],datasets:[{label:"Resultados",data:[0,0,0,0,0],backgroundColor:["rgba(46, 204, 113,1.0)","rgba(52, 152, 219,1.0)","rgba(155, 89, 182,1.0)","rgba(251, 197, 49,1.0)","rgba(255, 99, 132,1.0)"],borderWidth:0}]},this.langs={labels:["Java","C++","Python"],datasets:[{label:"Lenguajes usados",data:[0,0,0],backgroundColor:["rgba(46, 204, 113,1.0)","rgba(52, 152, 219,1.0)","rgba(255, 99, 132,1.0)"],borderWidth:0}]}}setVeredict(e){this.veredict=e,this.getSubmissions()}filterChangeChanged(e,s){void 0!==s&&this.getSubmissions()}activate(e,s){this.routeConfig=s,this.idProblem=e.idProblem,this.idAssignment=e.idAssignment,this.idAssignmentProblem=e.idAssignmentProblem,this.getAssignment(),this.getStatsByVerdict(),this.getStatsByLang(),this.getSubmissions()}pageChanged(e,s){void 0!==s&&this.getSubmissions()}getAssignment(){this.syllabusService.loadAssignment(this.idAssignment).then(e=>{this.assignment=new d.a(e.assignment.tittle,e.assignment.description,e.assignment.init_date,e.assignment.end_date,void 0,e.assignment.syllabus_id,this.idAssignment);for(let s=0;s<e.assignment.problems.length;s++)if(e.assignment.problems[s].id==this.idProblem){null!==e.assignment.problems[s].title_es?this.problem=e.assignment.problems[s].title_es:this.problem=e.assignment.problems[s].title_en;break}}).catch(e=>{401===e.status?this.alertService.showMessage(n.b.permissionsError):this.alertService.showMessage(n.b.unknownError)})}getStatsByVerdict(){this.syllabusService.loadStatsByVerdict(this.idAssignment,this.idAssignmentProblem).then(e=>{for(let s=0;s<e.length;s++)"Accepted"===e[s].verdict?this.veredicts.datasets[0].data[0]=e[s].total:"Time Limit Exceeded"===e[s].verdict?this.veredicts.datasets[0].data[1]=e[s].total:"Runtime Error"===e[s].verdict?this.veredicts.datasets[0].data[2]=e[s].total:"Compilation Error"===e[s].verdict?this.veredicts.datasets[0].data[3]=e[s].total:"Wrong Answer"===e[s].verdict&&(this.veredicts.datasets[0].data[4]=e[s].total)}).catch(e=>{401===e.status?this.alertService.showMessage(n.b.permissionsError):this.alertService.showMessage(n.b.unknownError)})}getStatsByLang(){this.syllabusService.loadStatsByLang(this.idAssignment,this.idAssignmentProblem).then(e=>{for(let s=0;s<e.length;s++)"Java"===e[s].language?this.langs.datasets[0].data[0]=e[s].total:"C++"===e[s].language?this.langs.datasets[0].data[1]=e[s].total:"Python"===e[s].language&&(this.langs.datasets[0].data[2]=e[s].total)}).catch(e=>{401===e.status?this.alertService.showMessage(n.b.permissionsError):this.alertService.showMessage(n.b.unknownError)})}getSubmissions(){let e;e="Tiempo de ejecución"===this.sort?"time":"date";let s=this.veredict.value;"ALL"===s&&(s=null),this.syllabusService.getSubmissionsAssignment(this.idAssignment,this.idAssignmentProblem,this.limit,this.page,"Ascendente"===this.by?"ASC":"DESC",e,s).then(e=>{this.totalPages=e.meta.totalPages,this.submissions=[],e.meta.totalItems>0&&(this.submissions=e.data)}).catch(e=>{401===e.status||403===e.status?this.alertService.showMessage(n.b.permissionsError):500===e.status?this.alertService.showMessage(n.b.serverError):this.alertService.showMessage(n.b.unknownError)})}showDate(e){let s=new Date(e);return this.getDate(s)+" - "+this.getTime(s)}getDate(e){return e.getDate()+" de "+["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"][e.getMonth()]+" del "+e.getFullYear()}getTime(e){let s="";return e.getHours()<=12?s+=e.getHours()+":":e.getHours()>12&&(s+=e.getHours()-12+":"),s+=(e.getMinutes()<10?"0":"")+e.getMinutes(),e.getHours()<12?s+="AM":s+="PM",s}mapVeredict(e){return"in queue"===e?"En espera":"running"===e?"Ejecutando":"Accepted"===e?"Correcto":"Compilation Error"===e?"Error de compilación":"Time Limit Exceeded"===e?"Tiempo limite excedido":"Runtime Error"===e?"Error en tiempo de ejecución":"Wrong Answer"===e?"Respuesta equivocada":void 0}toFixed(e){return isNaN(parseFloat(e))?"-":parseFloat(e).toFixed(3)}viewCode(s){this.downloadActive=!1,this.submissionLoaded=s,this.submissionLoaded.code="Cargando código...",e("#submission-detail").modal("show"),this.problemService.getSubmission(this.submissionLoaded.file_name).then(e=>{this.codeDownload=e,this.downloadActive=!0;let s=new FileReader;s.onload=()=>{this.submissionLoaded.code=s.result},s.readAsText(e)}).catch(e=>{401===e.status||403===e.status?this.alertService.showMessage(n.b.permissionsError):500===e.status?this.alertService.showMessage(n.b.serverError):this.alertService.showMessage(n.b.unknownError)})}downloadCode(){let e;if("Java"===this.submissionLoaded.language?e="Main.java":"C++"===this.submissionLoaded.language?e="main.cpp":"Python"===this.submissionLoaded.language&&(e="main.py"),window.navigator.msSaveOrOpenBlob)window.navigator.msSaveBlob(this.codeDownload,e);else{let s=window.document.createElement("a");s.href=window.URL.createObjectURL(this.codeDownload),s.download=e,document.body.appendChild(s),s.click(),document.body.removeChild(s)}}}).prototype,"page",[o.h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),r=b(i.prototype,"filterChange",[o.h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),a=i))||a}.call(this,t("EVdn"))},"modules/syllabus/assignment-detail/assignment-detail.html":function(e,s,t){e.exports='<template> <require from="../../../resources/elements/paginator"></require> <require from="../../../resources/elements/filter"></require> <div class="container"> <ol class="breadcrumb"> <li class="breadcrumb-item"> <a href="/clases">Clases</a> </li> <li class="breadcrumb-item"> <a href="/clases/clases/${assignment.syllabusId}">Clase actual</a> </li> <li class="breadcrumb-item"> <a href="/clases/estadisticas/${assignment.id}">Detalle de la tarea</a> </li> <li class="breadcrumb-item active">Detalles del problema "${problem}"</li> </ol> <h2 class="text-right">Detalle del problema "${problem}"</h2> <h4 class="text-right">De la tarea "${assignment.title}"</h4> <hr> <div class="row"> <div class="col-md-12 col-lg-6"> <div class="card"> <div class="card-body"> <h4 class="text-center">Veredictos</h4> <canvas chart="type: pie; data.bind: veredicts; should-update: true; throttle: 100;"></canvas> </div> </div> </div> <div class="col-md-12 col-lg-6"> <div class="card"> <div class="card-body"> <h4 class="text-center">Lenguajes</h4> <canvas chart="type: pie; data.bind: langs; should-update: true; throttle: 100;"></canvas> </div> </div> </div> </div> <div class="col-12"> <h2 class="text-right">Soluciones recibidas</h2> <div class="col-lg-12"> <hr> Mostrar solo envios con veredicto: <div class="dropdown dropdown-inline ufps-dropdown"> <button class="btn btn-default dropdown-toggle" type="button" id="selectVeredict" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"> ${veredict.text} <span class="caret"></span> </button> <ul class="dropdown-menu ufps-dropdown-menu dropdown-mini" aria-labelledby="selectVeredict"> <li repeat.for="i of veredictOptions"> <a click.delegate="setVeredict(i)">${i.text}</a> </li> </ul> </div> <div class="fix"></div> </div> <filter number-of-items.bind="numberOfItems" sort-options.bind="sortOptions" filter-change.bind="filterChange" limit.bind="limit" sort.bind="sort" by.bind="by" text-to-show.bind="\'envios\'" language-flag.bind="false"></filter> <table> <thead> <tr> <th class="text-center">Usuario</th> <th class="text-center">Fecha de envio</th> <th class="text-center">Veredicto</th> <th class="text-center">Tiempo de ejecución</th> <th class="text-center">Lenguaje</th> <th class="text-center">Código</th> </tr> </thead> <tbody> <tr repeat.for="submission of submissions"> <td class="text-center">${submission.user.name} <span class="username-gray">(${submission.user.username})</span> </td> <td class="text-center">${showDate(submission.created_at)}</td> <td class="text-center" if.bind="submission.status !== \'executed\'">${mapVeredict(submission.status)}</td> <td class="text-center" if.bind="submission.status === \'executed\'">${mapVeredict(submission.verdict)}</td> <td class="text-center">${toFixed(submission.execution_time)}s</td> <td class="text-center">${submission.language}</td> <td class="text-center"> <p class="ufps-name-problem-list ufps-name-problem-list-l"> <a click.delegate="viewCode(submission)">Ver código</a> </p> </td> </tr> <tr if.bind="submissions.length === 0"> <td colspan="7">No has realizado ningún envio.</td> </tr> </tbody> </table> <paginator page.bind="page" total-pages.bind="totalPages"></paginator> </div> <div class="modal fade" id="submission-detail" tabindex="-1" role="dialog" aria-labelledby="submission-detail"> <div class="modal-dialog modal-lg" role="document"> <div class="modal-content"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button> <table> <thead> <tr> <th class="text-center">Usuario</th> <th class="text-center">Fecha de envio</th> <th class="text-center">Veredicto</th> <th class="text-center">Tiempo de ejecución</th> <th class="text-center">Lenguaje</th> </tr> </thead> <tbody> <tr> <td class="text-center">${submissionLoaded.user.name} <span class="username-gray">(${submissionLoaded.user.username})</span> </td> <td class="text-center">${showDate(submissionLoaded.created_at)}</td> <td class="text-center" if.bind="submissionLoaded.status !== \'executed\'">${mapVeredict(submissionLoaded.status)}</td> <td class="text-center" if.bind="submissionLoaded.status === \'executed\'">${mapVeredict(submissionLoaded.verdict)}</td> <td class="text-center">${toFixed(submissionLoaded.execution_time)}s</td> <td class="text-center">${submissionLoaded.language}</td> </tr> <tr> <td colspan="6"> <div class="col-12 text-center"> <a click.delegate="downloadCode()" class="btn btn-secondary ufps-btn ufps-btn-secondary text-center" if.bind="downloadActive">Descargar código</a> <div class="ufps-separator-mini"></div> </div> <pre>\n                        <code>\n${submissionLoaded.code}</code>\n                      </pre> </td> </tr> </tbody> </table> </div> </div> </div> </div> </div> </template> '},"modules/syllabus/assignment-stats/assignment-stats":function(e,s,t){"use strict";t.r(s),t.d(s,"AssignmentStats",(function(){return c}));var a,i,l,r=t("aurelia-framework"),o=t("oHge"),n=t("x4W3"),d=t("W1ll");let c=Object(r.f)(d.a,d.k)((i=class{constructor(e,s){var t,a,i,r;t=this,a="page",r=this,(i=l)&&Object.defineProperty(t,a,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(r):void 0}),this.alertService=e,this.syllabusService=s,this.assignment=new n.a,this.score=[],this.mapProblem=[],this.mapUsers=[],this.page=1,this.totalPages=1}activate(e,s){this.routeConfig=s,this.id=e.id,this.getAssignment()}pageChanged(e,s){void 0!==s&&this.getResults()}getAssignment(){this.syllabusService.loadAssignment(this.id).then(e=>{this.assignment=new n.a(e.assignment.tittle,e.assignment.description,e.assignment.init_date,e.assignment.end_date,void 0,e.assignment.syllabus_id,this.id),this.assignment.adjuntProblems(e.assignment.problems);for(let e=0;e<this.assignment.problemsLoaded.length;e++)this.mapProblem[this.assignment.problemsLoaded[e].auxiliarId]=e+1;this.getResults()}).catch(e=>{401===e.status?this.alertService.showMessage(o.b.permissionsError):this.alertService.showMessage(o.b.unknownError)})}getResults(){this.syllabusService.loadResults(this.id,this.page).then(e=>{for(let s=0;s<e.length;s++){this.score.push([]),this.score[s].push(e[s].name+" ("+e[s].username+")");for(let e=1;e<this.assignment.problemsLoaded.length+1;e++)this.score[s].push(!1);this.score[s].push(e[s].assignment_problems.length)}for(let s=0;s<e.length;s++)for(let t=0;t<e[s].assignment_problems.length;t++)this.score[s][this.mapProblem[e[s].assignment_problems[t]]]=!0}).catch(e=>{401===e.status?this.alertService.showMessage(o.b.permissionsError):this.alertService.showMessage(o.b.unknownError)})}letterValue(e){return String.fromCharCode(e+65)}},u=i.prototype,b="page",h=[r.h],m={configurable:!0,enumerable:!0,writable:!0,initializer:null},g={},Object.keys(m).forEach((function(e){g[e]=m[e]})),g.enumerable=!!g.enumerable,g.configurable=!!g.configurable,("value"in g||g.initializer)&&(g.writable=!0),g=h.slice().reverse().reduce((function(e,s){return s(u,b,e)||e}),g),p&&void 0!==g.initializer&&(g.value=g.initializer?g.initializer.call(p):void 0,g.initializer=void 0),void 0===g.initializer&&(Object.defineProperty(u,b,g),g=null),l=g,a=i))||a;var u,b,h,m,p,g},"modules/syllabus/assignment-stats/assignment-stats.html":function(e,s,t){e.exports='<template> <require from="../../../resources/elements/paginator"></require> <div class="container"> <ol class="breadcrumb"> <li class="breadcrumb-item"> <a href="/clases">Clases</a> </li> <li class="breadcrumb-item"> <a href="/clases/clases/${assignment.syllabusId}">Clase actual</a> </li> <li class="breadcrumb-item active">Detalle de la tarea "${assignment.title}"</li> </ol> <h1 class="text-right">${assignment.title}</h1> <hr> <h1 class="text-right">Detalles de la tarea</h1> <table> <thead> <tr> <th class="text-center" style="width:5%">Indice</th> <th class="text-center" style="width:60%">Problema</th> <th class="text-center" style="width:10%">Dificultad</th> <th class="text-center" style="width:15%">Idioma</th> <th class="text-center" style="width:10%">Detalle</th> </tr> </thead> <tbody> <tr repeat.for="problem of assignment.problemsLoaded"> <td class="text-center">${letterValue($index)}</td> <td class="text-left ufps-td-problem"> <p if.bind="problem.isInSpanish() && language !== \'Inglés\'" class="ufps-name-problem-list"> <a route-href="route: ViewProblem; params.bind: {assignmentProblemId:problem.auxiliarId, assignmentId:assignment.id, problemId: problem.id, lang: \'es\'}">${problem.titleES}</a> </p> <p if.bind="!problem.isInSpanish() || (problem.isInEnglish() && language === \'Inglés\')" class="ufps-name-problem-list"> <a route-href="route: ViewProblem; params.bind: {assignmentProblemId:problem.auxiliarId, assignmentId:assignment.id, problemId: problem.id, lang: \'en\'}">${problem.titleEN}</a> </p> </td> <td class="text-center">${problem.level}</td> <td class="text-center ufps-language"> <span class="${problem.isInSpanish() ? \'active\' : \'inactive\'}"> <a route-href="route: ViewProblem; params.bind: {assignmentProblemId:problem.auxiliarId, assignmentId:assignment.id, problemId: problem.id, lang: \'es\'}">ES</a> </span> | <span class="${problem.isInEnglish() ? \'active\' : \'inactive\'}"> <a route-href="route: ViewProblem; params.bind: {assignmentProblemId:problem.auxiliarId, assignmentId:assignment.id, problemId: problem.id, lang: \'en\'}">EN</a> </span> </td> <td> <a route-href="route: AssignmentDetail; params.bind: {idAssignment:id, idAssignmentProblem: problem.auxiliarId, idProblem: problem.id}" class="ufps-btn ufps-btn-default btn btn-default">Detalle</a> </td> </tr> </tbody> </table> <div class="ufps-separator"></div> <h1 class="text-right">Soluciones por estudiante</h1> <table class="ufps-score"> <thead> <tr> <th class="text-center">Usuario</th> <th class="text-center" repeat.for="i of assignment.problemsLoaded.length"> ${letterValue(i)} </th> <th class="text-center">Total</th> </tr> </thead> <tbody> <tr repeat.for="value of score"> <td repeat.for="field of value"> <p class="text-center" if.bind="$index === 0 || $index === assignment.problemsLoaded.length + 1">${field}</p> <div if.bind="$index !== 0 && $index !== assignment.problemsLoaded.length + 1 && field" class="ufps-score-correct"></div> </td> </tr> <tr if.bind="score.length === 0"> <td colspan="${assignment.problemsLoaded.length + 2}">No hay usuarios actualmente registrados en esta clase.</td> </tr> </tbody> </table> <div class="ufps-separator"></div> <hr> </div> </template> '},"modules/syllabus/create-assignment/create-assignment":function(e,s,t){"use strict";t.r(s),t.d(s,"CreateAssignment",(function(){return m}));var a,i,l,r,o=t("aurelia-framework"),n=t("4ysu"),d=t("oHge"),c=t("x4W3"),u=t("W1ll");function b(e,s,t,a){t&&Object.defineProperty(e,s,{enumerable:t.enumerable,configurable:t.configurable,writable:t.writable,value:t.initializer?t.initializer.call(a):void 0})}function h(e,s,t,a,i){var l={};return Object.keys(a).forEach((function(e){l[e]=a[e]})),l.enumerable=!!l.enumerable,l.configurable=!!l.configurable,("value"in l||l.initializer)&&(l.writable=!0),l=t.slice().reverse().reduce((function(t,a){return a(e,s,t)||t}),l),i&&void 0!==l.initializer&&(l.value=l.initializer?l.initializer.call(i):void 0,l.initializer=void 0),void 0===l.initializer&&(Object.defineProperty(e,s,l),l=null),l}let m=Object(o.f)(u.a,u.k,n.d)((l=h((i=class{constructor(e,s,t){b(this,"now",l,this),b(this,"dateLoaded",r,this),this.alertService=e,this.syllabusService=s,this.router=t,this.problems="",this.type="new"}dateLoadedChanged(e,s){let t=this.now;t.setTime(t.getTime()+6e5),this.startDate=this.formatDate(t),this.startTime=this.formatTime(t),t.setTime(t.getTime()+864e5),this.endDate=this.formatDate(t),this.endTime=this.formatTime(t)}activate(e,s){this.routeConfig=s,this.assignment=new c.a,this.assignment.syllabusId=e.id}formatDate(e){let s=e.getUTCFullYear()+"-";return e.getMonth()+1<10&&(s+="0"),s+=e.getMonth()+1+"-",e.getDate()<10&&(s+="0"),s+=e.getDate(),s}formatTime(e){let s="";return e.getHours()<10&&(s+="0"),s+=e.getHours()+":",e.getMinutes()<10&&(s+="0"),s+=e.getMinutes(),s}validateProblems(){let e=this.problems.replace(/ /g,"");e=e.split(",");let s=[];for(let t=0;t<e.length;t++)if(e[t].length>0&&!isNaN(parseInt(e[t])))s.push(parseInt(e[t]));else if(isNaN(parseInt(e[t])))return!1;return this.assignment.problems=s,!0}create(){this.validateProblems()?(this.assignment.startDate=new Date(this.startDate+" "+this.startTime).toISOString(),this.assignment.endDate=new Date(this.endDate+" "+this.endTime).toISOString(),this.syllabusService.createAssignment(this.assignment).then(e=>{this.router.navigate("clases/"+this.assignment.syllabusId),this.alertService.showMessage(d.b.assignmentCreated)}).catch(e=>{401===e.status?this.alertService.showMessage(d.b.permissionsError):this.alertService.showMessage(d.b.unknownError)})):this.alertService.showMessage(d.b.assignmentInvalidProblems)}}).prototype,"now",[o.h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),r=h(i.prototype,"dateLoaded",[o.h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),a=i))||a},"modules/syllabus/create-assignment/create-assignment.html":function(e,s,t){e.exports='<template> <require from="../../../resources/elements/clock"></require> <clock date.bind="now" date-loaded.bind="dateLoaded" show-timer.bind="false"></clock> <div class="container ufps-container-logged"> <ol class="breadcrumb"> <li class="breadcrumb-item"> <a href="/clases">Clases</a> </li> <li class="breadcrumb-item"> <a href="/clases/clases/${assignment.syllabusId}">Detalle de la clase actual</a> </li> <li class="breadcrumb-item active" if.bind="type === \'edit\'">${assignment.title}</li> <li class="breadcrumb-item active" if.bind="type === \'new\'">Nueva tarea</li> </ol> <h2 class="text-right" if.bind="type === \'edit\'">${assignment.title}</h2> <h2 class="text-right" if.bind="type === \'new\'">Nueva Tarea</h2> <hr> <form submit.delegate="create()"> <div class="-assignment"> <div class="row"> <label class="col-form-label col-md-2" for="problem-name">Nombre:</label> <div class="col-md-10 input-group ufps-input-creator"> <input type="text" class="form-control" placeholder="Nombre de la tarea" value.bind="assignment.title" required> <span class="input-group-addon" tooltip data-toggle="tooltip" title="Nombre que se mostrará al desplegar esta tarea"> <span class="fas fa-question-circle"></span> </span> </div> </div> <div class="row"> <label class="col-form-label col-md-2" for="problem-name">Descripción:</label> <div class="col-md-10 input-group ufps-input-creator"> <textarea class="form-control" placeholder="Descripción de la tarea" value.bind="assignment.description"></textarea> <span class="input-group-addon" tooltip data-toggle="tooltip" title="Descripción que se mostrará a los estudiantes al abrir esta tarea"> <span class="fas fa-question-circle"></span> </span> </div> </div> </div> <div class="-assignment" if.bind="type === \'new\'"> <div class="row"> <label class="col-form-label col-md-2" for="problem-name">Problemas:</label> <div class="col-md-10 input-group ufps-input-creator"> <input type="text" class="form-control" placeholder="Ingrese los ID de los problemas separados por coma" value.bind="problems" required> <span class="input-group-addon" tooltip data-toggle="tooltip" title="Puede saber el ID de un problema usando la barra de busqueda superior"> <span class="fas fa-question-circle"></span> </span> </div> </div> </div> <div class="row"> <div class="col-lg-6"> <div class="form-inline"> <label class="col-form-label col-md-2" for="problem-name">Desde el:</label> <div class="col-md-10 input-group ufps-input-creator"> <input type="date" class="form-control" value.bind="startDate" required> <span class="input-group-addon" tooltip data-toggle="tooltip" title="Fecha de inicio desde la cual estará disponible esta tarea"> <span class="fas fa-question-circle"></span> </span> </div> </div> </div> <div class="col-lg-6"> <div class="form-inline"> <label class="col-form-label col-md-2" for="problem-name">a las:</label> <div class="col-md-10 input-group ufps-input-creator"> <input type="time" class="form-control" value.bind="startTime" required> <span class="input-group-addon" tooltip data-toggle="tooltip" title="Hora desde la cual estará disponible esta tarea"> <span class="fas fa-question-circle"></span> </span> </div> </div> </div> </div> <div class="row"> <div class="col-lg-6"> <div class="form-inline"> <label class="col-form-label col-md-2" for="problem-name">Hasta el:</label> <div class="col-md-10 input-group ufps-input-creator"> <input type="date" class="form-control" value.bind="endDate" min="${startDate}" required> <span class="input-group-addon" tooltip data-toggle="tooltip" title="Fecha hasta la cual estará disponible esta tarea"> <span class="fas fa-question-circle"></span> </span> </div> </div> </div> <div class="col-lg-6"> <div class="form-inline"> <label class="col-form-label col-md-2" for="problem-name">a las:</label> <div class="col-md-10 input-group ufps-input-creator"> <input type="time" class="form-control" value.bind="endTime" required> <span class="input-group-addon" tooltip data-toggle="tooltip" title="Hora hasta la cual estará disponible esta tarea"> <span class="fas fa-question-circle"></span> </span> </div> </div> </div> </div> <div class="col-12 text-center" if.bind="type === \'new\'"> <input type="submit" class="btn ufps-btn-submit" value="Crear Tarea"> </div> <div class="col-12 text-center" if.bind="type === \'edit\'"> <input type="submit" class="btn ufps-btn-submit" value="Guardar cambios" style="margin-bottom:30px"> </div> </form> <div if.bind="type === \'edit\'"> <table> <thead> <tr> <th class="text-center" style="width:5%">Id</th> <th class="text-center" style="width:70%">Problema</th> <th class="text-center" style="width:10%">Dificultad</th> <th class="text-center" style="width:15%">Idioma</th> </tr> </thead> <tbody> <tr if.bind="assignment.problemsLoaded.length === 0"> <td></td> <td> <p>No hay problemas actualmente en esta tarea.</p> </td> <td></td> <td></td> </tr> <tr repeat.for="problem of assignment.problemsLoaded"> <td class="text-center">${problem.id}</td> <td class="text-left ufps-td-problem"> <p if.bind="problem.isInSpanish() && language !== \'Inglés\'" class="ufps-name-problem-list"> <a href="/problemas/${problem.id}/detalle/es">${problem.titleES}</a> </p> <p if.bind="!problem.isInSpanish() || (problem.isInEnglish() && language === \'Inglés\')" class="ufps-name-problem-list"> <a href="/problemas/${problem.id}/detalle/en">${problem.titleEN}</a> </p> <span if.bind="authService.isCoach()" class="ufps-edit-problem-list fas fa-times-circle" data-toggle="tooltip" title="Eliminar problema de la tarea" click.delegate="showRemoveProblem(problem.id)" tooltip></span> </td> <td class="text-center">${problem.level}</td> <td class="text-center ufps-language"> <span class="${problem.isInSpanish() ? \'active\' : \'inactive\'}"> <a href="/problemas/${problem.id}/detalle/es">ES</a> </span> | <span class="${problem.isInEnglish() ? \'active\' : \'inactive\'}"> <a href="/problemas/${problem.id}/detalle/en">EN</a> </span> </td> </tr> </tbody> </table> <div class="-assignment" if.bind="type === \'edit\'"> <br> <div class="row"> <label class="col-form-label col-md-2" for="problem-name">Añadir problemas:</label> <div class="col-md-10 input-group ufps-input-creator"> <input type="text" class="form-control" placeholder="Ingrese los ID de los problemas separados por coma" value.bind="problems" required> <span class="input-group-addon" tooltip data-toggle="tooltip" title="Puede saber el ID de un problema usando la barra de busqueda superior"> <i class="fas fa-question-circle"></i> </span> <span class="input-group-addon btn2" click.delegate="addProblems()"> <span>Añadir</span> </span> </div> </div> </div> </div> </div> <div if.bind="authService.isCoach()" class="modal fade" id="remove-problem" tabindex="-1" role="dialog" aria-labelledby="remove-problem"> <div class="modal-dialog" role="document"> <div class="modal-content"> <div class="modal-header text-center"> <h4 class="modal-title">¿Estás seguro de eliminar este problema de la tarea?</h4> <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button> </div> <br> <div class="modal-body"> <p>Esto no eliminará el problema de la plataforma. Solo de la tarea actual.</p> </div> <div class="modal-footer"> <button class="btn btn-secondary ufps-btn-secondary" click.delegate="removeProblem()">Si</button> <button class="btn btn-secondary ufps-btn-secondary" data-dismiss="modal" aria-label="Close">No</button> </div> </div> </div> </div> </template> '},"modules/syllabus/create-assignment/edit-assignment":function(e,s,t){"use strict";t.r(s),function(e){t.d(s,"EditAssignment",(function(){return d}));var a,i=t("aurelia-framework"),l=t("4ysu"),r=t("oHge"),o=t("x4W3"),n=t("W1ll");let d=Object(i.f)(n.a,n.b,n.k,l.d)(a=class{constructor(e,s,t,a){this.alertService=e,this.authService=s,this.syllabusService=t,this.router=a,this.type="edit"}activate(e,s){this.routeConfig=s,this.id=e.id,this.getAssignment()}getViewStrategy(){return"./create-assignment.html"}formatDate(e){let s=e.getUTCFullYear()+"-";return e.getMonth()+1<10&&(s+="0"),s+=e.getMonth()+1+"-",e.getDate()<10&&(s+="0"),s+=e.getDate(),s}formatTime(e){let s="";return e.getHours()<10&&(s+="0"),s+=e.getHours()+":",e.getMinutes()<10&&(s+="0"),s+=e.getMinutes(),s}getAssignment(){this.syllabusService.loadAssignment(this.id).then(e=>{let s=new Date(e.assignment.init_date),t=new Date(e.assignment.end_date);this.startDate=this.formatDate(s),this.endDate=this.formatDate(t),this.startTime=this.formatTime(s),this.endTime=this.formatTime(t),this.assignment=new o.a(e.assignment.tittle,e.assignment.description,e.assignment.init_date,e.assignment.end_date,void 0,e.assignment.syllabus_id,this.id),this.assignment.adjuntProblems(e.assignment.problems),this.problems=""}).catch(e=>{401===e.status?this.alertService.showMessage(r.b.permissionsError):this.alertService.showMessage(r.b.unknownError)})}showRemoveProblem(s){this.problemToRemove=s,e("#remove-problem").modal("show")}create(){this.assignment.startDate=new Date(this.startDate+" "+this.startTime).toISOString(),this.assignment.endDate=new Date(this.endDate+" "+this.endTime).toISOString(),this.syllabusService.editAssignment(this.assignment).then(e=>{this.alertService.showMessage(r.b.assignmentModified)}).catch(e=>{401===e.status?this.alertService.showMessage(r.b.permissionsError):this.alertService.showMessage(r.b.unknownError)})}removeProblem(){this.syllabusService.removeProblem(this.id,this.problemToRemove).then(()=>{this.alertService.showMessage(r.b.problemDeleted),this.assignment.removeProblem(this.problemToRemove),e("#remove-problem").modal("hide")}).catch(s=>{401===s.status||403===s.status?this.alertService.showMessage(r.b.permissionsError):500===s.status?this.alertService.showMessage(r.b.serverError):this.alertService.showMessage(r.b.unknownError),e("#remove-problem").modal("hide")})}validateProblems(){let e=this.problems.replace(/ /g,"");e=e.split(",");let s=[];for(let t=0;t<e.length;t++)if(e[t].length>0&&!isNaN(parseInt(e[t])))s.push(parseInt(e[t]));else if(isNaN(parseInt(e[t])))return!1;return this.assignment.problems=s,!0}addProblems(){this.validateProblems()?this.syllabusService.addProblems(this.id,this.assignment.problems).then(e=>{this.alertService.showMessage(r.b.assignmentCreated),this.getAssignment()}).catch(e=>{401===e.status?this.alertService.showMessage(r.b.permissionsError):this.alertService.showMessage(r.b.unknownError)}):this.alertService.showMessage(r.b.assignmentInvalidProblems)}})||a}.call(this,t("EVdn"))},"modules/syllabus/home-syllabus/home-syllabus":function(e,s,t){"use strict";t.r(s),function(e){t.d(s,"HomeSyllabus",(function(){return c}));var a,i,l,r=t("aurelia-framework"),o=t("oHge"),n=t("x4W3"),d=t("W1ll");let c=Object(r.f)(d.a,d.b,d.k)((i=class{constructor(e,s,t){var a,i,r,o;a=this,i="generalPage",o=this,(r=l)&&Object.defineProperty(a,i,{enumerable:r.enumerable,configurable:r.configurable,writable:r.writable,value:r.initializer?r.initializer.call(o):void 0}),this.alertService=e,this.authService=s,this.syllabusService=t,this.syllabusToShow=this.authService.isCoach()?7:8,this.generalPage=1,this.generalTotalPages=1,this.syllabuses=[],this.enrolledSyllabuses=[],this.syllabusesLoaded=!0,this.enrolledSyllabusesLoaded=!0,this.newSyllabus=new n.g,this.editSyllabus=new n.g,this.syllabusToRemove=new n.g,this.syllabusToEnroll=new n.g,this.options=[!0,!1],this.type=0}created(){this.getSyllabuses(this.type)}generalPageChanged(e,s){void 0!==s&&this.getSyllabuses(this.type)}getSyllabuses(e){let s=null;this.authService.isCoach()&&(s=this.authService.getUserId()),this.syllabusService.getSyllabuses(this.syllabusToShow,this.generalPage,s,e).then(e=>{this.generalTotalPages=e.meta.totalPages,0===this.syllabuses.length&&(this.syllabusesLoaded=!1),this.generalTotalPages>0?this.syllabuses=e.data:this.alertService.showMessage(o.b.syllabusesEmpty),this.authService.isStudent()&&this.getEnrolledSyllabuses(this.type)}).catch(e=>{this.syllabusesLoaded=!1,401===e.status?this.alertService.showMessage(o.b.permissionsError):this.alertService.showMessage(o.b.unknownError)})}getEnrolledSyllabuses(e){this.enrolledSyllabuses=[],this.syllabusService.getEnrolledSyllabuses(e).then(e=>{for(let s=0;s<e.user.syllabuses.length;s++)for(let t=0;t<this.syllabuses.length;t++)this.syllabuses[t].id===e.user.syllabuses[s]&&(this.syllabuses[t].enrolled=!0,this.enrolledSyllabuses.push(this.syllabuses[t]));0===this.enrolledSyllabuses.length&&(this.enrolledSyllabusesLoaded=!1)}).catch(e=>{this.enrolledSyllabusesLoaded=!1,401===e.status?this.alertService.showMessage(o.b.permissionsError):this.alertService.showMessage(o.b.unknownError)})}createSyllabus(){this.newSyllabus.privacy||null!==this.newSyllabus.key&&void 0!==this.newSyllabus.key&&""!==this.newSyllabus.key||this.alertService.showMessage(o.b.syllabusKeyNeeded),this.syllabusService.registerSyllabus(this.newSyllabus).then(s=>{this.getSyllabuses(this.type),this.alertService.showMessage(o.b.syllabusCreated),e("#new-syllabus").modal("hide"),this.newSyllabus=new n.g}).catch(()=>{this.alertService.showMessage(o.b.unknownError),e("#new-syllabus").modal("hide")})}showEditSyllabus(s,t,a,i){this.editSyllabus=new n.g(s,t,a,i,""),e("#edit-syllabus").modal("show")}modifySyllabus(){this.editSyllabus.privacy||null!==this.editSyllabus.key&&void 0!==this.editSyllabus.key&&""!==this.editSyllabus.key?this.syllabusService.editSyllabus(this.editSyllabus).then(()=>{this.syllabuses.find(e=>e.id===this.editSyllabus.id).tittle=this.editSyllabus.title,this.alertService.showMessage(o.b.syllabusEdited),e("#edit-syllabus").modal("hide")}).catch(s=>{401===s.status||403===s.status?this.alertService.showMessage(o.b.permissionsError):500===s.status?this.alertService.showMessage(o.b.serverError):this.alertService.showMessage(o.b.unknownError),e("#edit-syllabus").modal("hide")}):this.alertService.showMessage(o.b.syllabusKeyNeeded)}showRemoveSyllabus(s,t){this.syllabusToRemove=new n.g(s,t),e("#remove-syllabus").modal("show")}removeSyllabus(){this.syllabusService.removeSyllabus(this.syllabusToRemove.id).then(()=>{this.syllabuses.splice(this.syllabuses.findIndex(e=>e.id===this.syllabusToRemove.id),1),this.alertService.showMessage(o.b.syllabusRemoved),e("#remove-syllabus").modal("hide")}).catch(s=>{401===s.status||403===s.status?this.alertService.showMessage(o.b.permissionsError):500===s.status?this.alertService.showMessage(o.b.serverError):this.alertService.showMessage(o.b.unknownError),e("#remove-syllabys").modal("hide")})}showEnrollSyllabus(s,t,a,i){this.syllabusToEnroll=new n.g(s,t,a,i,""),e("#enroll-syllabus").modal("show")}enrollSyllabus(){this.syllabusToEnroll.privacy&&(this.syllabusToEnroll.key=void 0),this.syllabusToEnroll.privacy||null!==this.syllabusToEnroll.key&&void 0!==this.syllabusToEnroll.key&&""!==this.editSyllabus.key?this.syllabusService.enrollSyllabus(this.syllabusToEnroll.id,this.syllabusToEnroll.key).then(s=>{this.alertService.showMessage(o.b.enrolledInSyllabus),this.getEnrolledSyllabuses(),e("#enroll-syllabus").modal("hide")}).catch(s=>{this.alertService.showMessage(o.b.unknownError),e("#enroll-syllabus").modal("hide")}):this.alertService.showMessage(o.b.syllabusKeyNeeded)}},u=i.prototype,b="generalPage",h=[r.h],m={configurable:!0,enumerable:!0,writable:!0,initializer:null},g={},Object.keys(m).forEach((function(e){g[e]=m[e]})),g.enumerable=!!g.enumerable,g.configurable=!!g.configurable,("value"in g||g.initializer)&&(g.writable=!0),g=h.slice().reverse().reduce((function(e,s){return s(u,b,e)||e}),g),p&&void 0!==g.initializer&&(g.value=g.initializer?g.initializer.call(p):void 0,g.initializer=void 0),void 0===g.initializer&&(Object.defineProperty(u,b,g),g=null),l=g,a=i))||a;var u,b,h,m,p,g}.call(this,t("EVdn"))},"modules/syllabus/home-syllabus/home-syllabus.html":function(e,s,t){e.exports='<template> <require from="../../../resources/attributes/tooltip"></require> <require from="../../../resources/elements/paginator"></require> <div if.bind="authService.isStudent()" class="container ufps-container-logged"> <h1 class="text-right">Mis clases</h1> <hr> <div class="text-center" if.bind="!enrolledSyllabusesLoaded"> <p>Actualmente no tienes ninguna clase inscrita.</p> </div> <div repeat.for="syllabus of enrolledSyllabuses" class="col-12 col-md-6 col-lg-4 col-xl-3 ufps-card-container"> <a route-href="route: SyllabusDetail; params.bind: {id:syllabus.id}"> <div class="ufps-card"> <div class="ufps-card-title"> <h1>${syllabus.tittle}</h1> </div> <div class="col-6 ufps-card-link"> <a route-href="route: SyllabusDetail; params.bind: {id:syllabus.id}">Ver clase</a> </div> <div class="col-6 ufps-card-link"> <a route-href="route: SyllabusStatistics; params.bind: {id:syllabus.id}">Detalle</a> </div> <div class="fix"></div> </div> </a> </div> </div> <div class="container ufps-container-logged"> <h1 class="text-right" if.bind="authService.isStudent()">Clases disponibles</h1> <h1 class="text-right" if.bind="authService.isCoach()">Mis clases</h1> <hr> <div repeat.for="syllabus of syllabuses" class="col-12 col-md-6 col-lg-4 col-xl-3 ufps-card-container"> <div class="ufps-card"> <div class="ufps-card-title"> <span if.bind="authService.isCoach()" class="ufps-edit-category fas fa-pencil-alt" data-toggle="tooltip" title="Editar los datos de la clase" click.delegate="showEditSyllabus(syllabus.id, syllabus.tittle, syllabus.description, syllabus.public)" tooltip></span> <span if.bind="authService.isCoach()" class="ufps-remove-category fas fa-times-circle" data-toggle="tooltip" title="Eliminar la clase" click.delegate="showRemoveSyllabus(syllabus.id, syllabus.tittle)" tooltip></span> <h1>${syllabus.tittle}</h1> </div> <div if.bind="authService.isCoach()" class="col-6 ufps-card-link"> <a route-href="route: SyllabusDetail; params.bind: {id:syllabus.id}">Detalle</a> </div> <div if.bind="authService.isCoach()" class="col-6 ufps-card-link"> <a route-href="route: SyllabusStatistics; params.bind: {id:syllabus.id}">Estadísticas</a> </div> <div if.bind="authService.isStudent()" class="col-6 ufps-card-link"> <span if.bind="syllabus.public">Público</span> <span if.bind="!syllabus.public">Privado</span> </div> <div if.bind="authService.isStudent() && !syllabus.enrolled" class="col-xs-6 ufps-card-link"> <a click.delegate="showEnrollSyllabus(syllabus.id, syllabus.tittle, syllabus.description, syllabus.public)">Registrarse</a> </div> <div if.bind="authService.isStudent() && syllabus.enrolled" class="col-xs-6 ufps-card-link"> <span>Registrado </span></div> <div class="fix"></div> </div> </div> <div if.bind="authService.isCoach()" class="col-12 col-md-6 col-lg-4 col-xl-3 ufps-card-new ufps-card-container"> <div class="ufps-card" data-toggle="modal" data-target="#new-syllabus"> <div class="ufps-card-title"> <h1> <i class="fas fa-plus-circle fa-2x fa-lg"></i> </h1> </div> <div class="col-12 ufps-card-link"> Nueva clase </div> <div class="fix"></div> </div> </div> <div class="fix"></div> <paginator page.bind="generalPage" total-pages.bind="generalTotalPages"></paginator> </div> <div if.bind="authService.isCoach()" class="modal fade" id="new-syllabus" tabindex="-1" role="dialog" aria-labelledby="new-syllabus"> <div class="modal-dialog" role="document"> <div class="modal-content"> <div class="modal-header"> <h4 class="modal-title">Nueva clase</h4> <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button> <br> </div> <div class="modal-body"> <form submit.delegate="createSyllabus()"> <div class="form-group"> <label>Titulo</label> <input type="text" class="form-control" placeholder="Nombre de la clase" value.bind="newSyllabus.title" required> </div> <div class="form-group"> <label>Descripción</label> <input type="text" class="form-control" placeholder="Descripión de la clase" value.bind="newSyllabus.description" required> </div> <div class="form-check"> <label> <input type="radio" name="privacy" model.bind="true" checked.bind="newSyllabus.privacy" checked="checked"> Público </label> </div> <div class="form-check"> <label> <input type="radio" name="privacy" model.bind="false" checked.bind="newSyllabus.privacy" checked="checked"> Privado <span>(requiere clave)</span> </label> </div> <div class="form-group" if.bind="!newSyllabus.privacy"> <label>Clave (Se recomienda reemplazar la siguiente clave)</label> <input type="text" class="form-control" placeholder="clave que deben ingresar los estudiantes para acceder a la clase" value.bind="newSyllabus.key" required> </div> <div class="text-center"> <input type="submit" class="btn btn-secondary ufps-btn-secondary" value="Registrar clase"> </div> </form> </div> </div> </div> </div> <div if.bind="authService.isCoach()" class="modal fade" id="edit-syllabus" tabindex="-1" role="dialog" aria-labelledby="edit-syllabus"> <div class="modal-dialog modal-lg" role="document"> <div class="modal-content"> <div class="modal-header"> <h4 class="modal-title">Editar Syllabus</h4> <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button> <br> </div> <div class="modal-body"> <form submit.delegate="modifySyllabus()"> <div class=""> <label>Titulo</label> <input type="text" class="form-control" placeholder="Nombre del syllabus" value.bind="editSyllabus.title" required> </div> <div class=""> <label>Descripción</label> <input type="text" class="form-control" placeholder="Descripión del syllabus" value.bind="editSyllabus.description" required> </div> <div class="form-check"> <label> <input type="radio" name="privacy" model.bind="true" checked.bind="editSyllabus.privacy"> Público </label> </div> <div class="form-check"> <label> <input type="radio" name="privacy" model.bind="false" checked.bind="editSyllabus.privacy"> Privado <span>(requiere clave)</span> </label> </div> <div class="form-group" if.bind="!editSyllabus.privacy"> <label>Clave (obligatorio: Confirme la clave o ingrese una nueva)</label> <input type="text" class="form-control" placeholder="clave que deben ingresar los estudiantes para acceder a la clase" value.bind="editSyllabus.key" required> </div> <div class="text-center"> <input type="submit" class="btn btn-secondary ufps-btn-secondary" value="Editar clase"> </div> </form> </div> </div> </div> </div> <div if.bind="authService.isCoach()" class="modal fade" id="remove-syllabus" tabindex="-1" role="dialog" aria-labelledby="remove-syllabus"> <div class="modal-dialog" role="document"> <div class="modal-content"> <div class="modal-header text-center"> <h4 class="modal-title">¿Estás seguro de eliminar la clase ${syllabusToRemove.title}?</h4> <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button> <br> </div> <div class="modal-body"> <p>Esta operación no se puede deshacer</p> </div> <div class="modal-footer"> <button class="btn btn-secondary ufps-btn-secondary" click.delegate="removeSyllabus()">Si</button> <button class="btn btn-secondary ufps-btn-secondary" data-dismiss="modal" aria-label="Close">No</button> </div> </div> </div> </div> <div if.bind="authService.isStudent()" class="modal fade" id="enroll-syllabus" tabindex="-1" role="dialog" aria-labelledby="enroll-syllabus"> <div class="modal-dialog" role="document"> <form submit.delegate="enrollSyllabus()"> <div class="modal-content"> <div class="modal-header text-center"> <h4 class="modal-title">¿Quieres registrarte en ${syllabusToEnroll.title}?</h4> <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button> <br> </div> <div class="modal-body"> <div if.bind="!syllabusToEnroll.privacy"> <p>Ingresa la clave de esta clase (si no la tienes, comunicate con el profesor/coach a cargo)</p> <div class="form-group"> <input type="text" class="form-control" value.bind="syllabusToEnroll.key"> </div> </div> </div> <div class="modal-footer"> <input type="submit" class="btn btn-secondary ufps-btn-secondary" value="Si"> <input type="submit" class="btn btn-secondary ufps-btn-secondary" data-dismiss="modal" aria-label="Close" value="No"> </div> </div></form> </div> </div> </template>'},"modules/syllabus/syllabus":function(e,s,t){"use strict";t.r(s),t.d(s,"Syllabus",(function(){return a}));class a{configureRouter(e,s){e.map([{route:"",name:"syllabus",moduleId:"modules/syllabus/home-syllabus/home-syllabus",title:"Clases",settings:{roles:["coach","student"]}},{route:"colegios",name:"syllabus-schools",moduleId:"modules/syllabus/syllabus-schools/syllabus-schools",title:"Clases Training Center High School",settings:{roles:["coach","student"]}},{name:"SyllabusDetail",route:"clases/:id",moduleId:"modules/syllabus/syllabus-detail/syllabus-detail",title:"Clase",settings:{roles:["coach","student"]}},{name:"SyllabusStatistics",route:"clases/:id/estadisticas",moduleId:"modules/syllabus/syllabus-statistics/syllabus-statistics",title:"Estadísticas de la clase",settings:{roles:["coach"]}},{name:"CreateAssignment",route:"nueva-tarea/:id",moduleId:"modules/syllabus/create-assignment/create-assignment",title:"Nueva tarea",settings:{roles:["coach"]}},{name:"EditAssignment",route:"editar-tarea/:id",moduleId:"modules/syllabus/create-assignment/edit-assignment",title:"Editar tarea",settings:{roles:["coach"]}},{name:"StatsAssignment",route:"estadisticas/:id",moduleId:"modules/syllabus/assignment-stats/assignment-stats",title:"Estadísticas de la tarea",settings:{roles:["coach"]}},{name:"AssignmentDetail",route:"estadisticas/:idAssignment/problema/:idAssignmentProblem/:idProblem",moduleId:"modules/syllabus/assignment-detail/assignment-detail",title:"Tarea",settings:{roles:["coach"]}},{name:"ViewAssignment",route:"tarea/:id",moduleId:"modules/syllabus/view-assignment/view-assignment",title:"Tarea",settings:{roles:["student"]}},{name:"ViewProblem",route:["tarea/:assignmentId/problema/:problemId/:assignmentProblemId","tarea/:assignmentId/problema/:problemId/:assignmentProblemId/:lang"],moduleId:"modules/syllabus/view-problem/view-problem",title:"Problema",settings:{roles:["student"]}}]),this.router=s}}},"modules/syllabus/syllabus-detail/syllabus-detail":function(e,s,t){"use strict";t.r(s),function(e){t.d(s,"SyllabusDetail",(function(){return u}));var a,i,l,r=t("aurelia-framework"),o=t("4ysu"),n=t("oHge"),d=t("x4W3"),c=t("W1ll");let u=Object(r.f)(c.a,c.b,c.k,o.d)((i=class{constructor(e,s,t,a){var i,r,o,n;i=this,r="page",n=this,(o=l)&&Object.defineProperty(i,r,{enumerable:o.enumerable,configurable:o.configurable,writable:o.writable,value:o.initializer?o.initializer.call(n):void 0}),this.alertService=e,this.authService=s,this.syllabusService=t,this.router=a,this.syllabus=new d.g,this.newMaterials="",this.materials=[],this.page=1,this.totalPages=1,this.users=[]}pageChanged(e,s){void 0!==s&&this.getUsers()}activate(e,s){this.routeConfig=s,this.id=e.id,this.getSyllabus(),this.getMaterials(),this.getUsers()}getSyllabus(){this.syllabusService.getSyllabus(this.id).then(e=>{this.syllabus=new d.g(e.syllabus.id,e.syllabus.tittle,e.syllabus.description,e.syllabus.public,void 0,!0,e.syllabus.assignments)}).catch(e=>{401===e.status?this.alertService.showMessage(n.b.permissionsError):this.alertService.showMessage(n.b.unknownError)})}getMaterials(){this.syllabusService.loadMaterials(this.id).then(e=>{this.materials=[];for(let s=0;s<e.syllabus.materials.length;s++)this.materials.push(new d.e(e.syllabus.materials[s].id,e.syllabus.materials[s].name,e.syllabus.materials[s].category_id,e.syllabus.materials[s].description,void 0,e.syllabus.materials[s].url,void 0,void 0))}).catch(e=>{401===e.status?this.alertService.showMessage(n.b.permissionsError):this.alertService.showMessage(n.b.unknownError)})}validateMaterialsIds(){let e=this.newMaterials.replace(/ /g,"");e=e.split(",");let s=[];for(let t=0;t<e.length;t++)if(e[t].length>0&&!isNaN(parseInt(e[t])))s.push(parseInt(e[t]));else if(isNaN(parseInt(e[t])))return!1;return this.newMaterials=s,!0}addMaterials(){this.validateMaterialsIds()?this.syllabusService.addMaterials(this.id,this.newMaterials).then(()=>{this.newMaterials="",this.alertService.showMessage(n.b.addedMaterial),this.getMaterials()}).catch(e=>{this.newMaterials="",401===e.status?this.alertService.showMessage(n.b.permissionsError):this.alertService.showMessage(n.b.unknownError)}):this.alertService.showMessage(n.b.invalidIdMaterial)}showRemoveMaterial(s){this.materialToRemove=s,e("#remove-material").modal("show")}removeMaterial(){this.syllabusService.removeMaterial(this.id,this.materialToRemove).then(()=>{this.alertService.showMessage(n.b.materialDeleted),this.getMaterials(),e("#remove-material").modal("hide")}).catch(s=>{401===s.status||403===s.status?this.alertService.showMessage(n.b.permissionsError):500===s.status?this.alertService.showMessage(n.b.serverError):this.alertService.showMessage(n.b.unknownError),e("#remove-problem").modal("hide")})}showModalExit(){e("#remove-user").modal("show")}removeUser(){this.syllabusService.removeUser(this.id).then(()=>{this.alertService.showMessage(n.b.syllabusUnenroll),e("#remove-user").modal("hide"),this.router.navigate("/clases")}).catch(s=>{401===s.status||403===s.status?this.alertService.showMessage(n.b.permissionsError):500===s.status?this.alertService.showMessage(n.b.serverError):this.alertService.showMessage(n.b.unknownError),e("#remove-user").modal("hide")})}getUsers(){this.syllabusService.getStatistics(this.id,15,this.page).then(e=>{this.totalPages=e.meta.totalPages,this.users=[],this.totalPages>0&&(this.users=e.data)}).catch(e=>{404===e.status?this.alertService.showMessage(n.b.unknownError):this.alertService.showMessage(n.b.serverError)})}showModalRemove(s){this.userToRemove=s,e("#remove-user-coach").modal("show")}removeUserFromCoach(){this.syllabusService.removeUserFromCoach(this.id,this.userToRemove).then(()=>{this.alertService.showMessage(n.b.userDeletedSyllabus),e("#remove-user-coach").modal("hide")}).catch(s=>{401===s.status||403===s.status?this.alertService.showMessage(n.b.permissionsError):500===s.status?this.alertService.showMessage(n.b.serverError):this.alertService.showMessage(n.b.unknownError),e("#remove-user-coach").modal("hide")})}},b=i.prototype,h="page",m=[r.h],p={configurable:!0,enumerable:!0,writable:!0,initializer:null},v={},Object.keys(p).forEach((function(e){v[e]=p[e]})),v.enumerable=!!v.enumerable,v.configurable=!!v.configurable,("value"in v||v.initializer)&&(v.writable=!0),v=m.slice().reverse().reduce((function(e,s){return s(b,h,e)||e}),v),g&&void 0!==v.initializer&&(v.value=v.initializer?v.initializer.call(g):void 0,v.initializer=void 0),void 0===v.initializer&&(Object.defineProperty(b,h,v),v=null),l=v,a=i))||a;var b,h,m,p,g,v}.call(this,t("EVdn"))},"modules/syllabus/syllabus-detail/syllabus-detail.html":function(e,s,t){e.exports='<template> <require from="../../../resources/attributes/tooltip"></require> <div class="container ufps-container-logged"> <ol class="breadcrumb"> <li class="breadcrumb-item"> <a href="/clases">Clases</a> </li> <li class="breadcrumb-item active">${syllabus.title}</li> </ol> <div class="row"> <div class="col-lg-9"> <h1>${syllabus.title}</h1> </div> <div class="col-lg-3 text-right" if.bind="authService.isStudent()"> <h1> <a click.delegate="showModalExit()" class="btn ufps-btn btn-secondary ufps-btn-secondary">Salir de esta clase</a> </h1> </div> </div> <div class="fix"></div> <div class="col-lg-12"> <p>${syllabus.description}</p> </div> <div class="ufps-separator-mini"></div> <h2 class="text-right">Tareas</h2> <hr> <div repeat.for="assignment of syllabus.assignments" class="col-12 col-md-6 col-lg-4 col-xl-3 ufps-card-container"> <div class="ufps-card"> <a route-href="route: ViewAssignment; params.bind: {id:assignment.id}" if.bind="authService.isStudent()"> <div class="ufps-card-title"> <h1>${assignment.title}</h1> </div> </a> <div if.bind="authService.isCoach()" class="ufps-card-title"> <h1>${assignment.title}</h1> </div> <div if.bind="authService.isStudent()" class="col-12 ufps-card-link"> <a route-href="route: ViewAssignment; params.bind: {id:assignment.id}" class="ufps-font-size-small">${assignment.getStringDate()}</a> </div> <div if.bind="authService.isCoach()" class="col-6 ufps-card-link"> <a route-href="route: EditAssignment; params.bind: {id:assignment.id}">Editar tarea</a> </div> <div if.bind="authService.isCoach()" class="col-6 ufps-card-link"> <a route-href="route: StatsAssignment; params.bind: {id:assignment.id}">Estadísticas</a> </div> <div class="fix"></div> </div> </div> <div if.bind="authService.isCoach()" class="col-12 col-md-6 col-lg-4 col-xl-3 ufps-card-new ufps-card-container"> <a route-href="route: CreateAssignment; params.bind: {id:id}"> <div class="ufps-card"> <div class="ufps-card-title"> <h1> <i class="fas fa-plus-circle fa-2x fa-lg"></i> </h1> </div> <div class="col-12 ufps-card-link"> Nueva tarea </div> <div class="fix"></div> </div> </a> </div> <div class="fix"></div> <h2 class="text-right">Lecturas</h2> <hr> <div class=""> <form if.bind="authService.isCoach()" submit.delegate="addMaterials()"> <div class="row form-inline"> <label class="col-form-label col-md-3" for="problem-name">Añadir material:</label> <div class="col-md-6 input-group ufps-input-creator"> <input type="text" class="form-control" placeholder="Ingresa el id de los materiales separados por comas" value.bind="newMaterials" required> <span class="input-group-addon" tooltip data-toggle="tooltip" title="Si el material no está en la plataforma, agreguelo a una categoría y luego ingrese aqui su id"> <span class="fas fa-question-circle"></span> </span> </div> <div class="col-md-2 text-center"> <input type="submit" value="Añadir" class="btn ufps-btn ufps-btn-secondary"> </div> </div> </form> </div> <div class="container"> <table> <thead> <tr> <th class="text-center">Id</th> <th class="text-center">Nombre</th> <th class="text-right">Acción</th> </tr> </thead> <tbody> <tr repeat.for="material of materials"> <td class="text-center">${material.id}</td> <td class="ufps-td-problem"> <p class="ufps-name-problem-list"> <a href="/materials/${material.category}/material/${material.id}" target="blank">${material.name}</a> </p> </td> <td class="text-right"> <a class="ufps-btn btn ufps-btn-secondary" href="/materials/${material.category}/material/${material.id}" target="blank">Abrir</a> <a class="ufps-btn btn ufps-btn-secondary" if.bind="authService.isCoach()" click.delegate="showRemoveMaterial(material.id)">Eliminar</a> </td> </tr> <tr if.bind="materials.length === 0"> <td></td> <td> No se ha añadido ningún material </td> <td></td> </tr> </tbody> </table> </div> <div if.bind="authService.isCoach()"> <div class="fix"></div> <div class="ufps-separator"></div> <h2 class="text-right">Usuarios</h2> <hr> <div class="container"> <table> <thead> <tr> <th class="text-center" style="width:85%">Nombre</th> <th class="text-center" style="width:15%">Acción</th> </tr> </thead> <tbody> <tr repeat.for="user of users"> <td>${user.name}</td> <td class="text-center"> <a class="ufps-btn btn ufps-btn-secondary btn-secondary" click.delegate="showModalRemove(user.id)">Eliminar</a> </td> </tr> <tr if.bind="users.length === 0"> <td>No hay usuarios actualmente registrados en esta clase.</td> <td> </td> </tr> </tbody> </table> <paginator page.bind="page" total-pages.bind="totalPages"></paginator> </div> </div> </div> <div if.bind="authService.isCoach()" class="modal fade" id="remove-material" tabindex="-1" role="dialog" aria-labelledby="remove-material"> <div class="modal-dialog" role="document"> <div class="modal-content"> <div class="modal-header text-center"> <h4 class="modal-title">¿Estás seguro de eliminar este material?</h4> <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button> <br> </div> <div class="modal-body"> <p>Esto solo eliminará el material de la clase actual. El material seguirá disponible en la sección pública.</p> </div> <div class="modal-footer"> <button class="btn btn-secondary ufps-btn-secondary" click.delegate="removeMaterial()">Si</button> <button class="btn btn-secondary ufps-btn-secondary" data-dismiss="modal" aria-label="Close">No</button> </div> </div> </div> </div> <div if.bind="authService.isStudent()" class="modal fade" id="remove-user" tabindex="-1" role="dialog" aria-labelledby="remove-user"> <div class="modal-dialog" role="document"> <div class="modal-content"> <div class="modal-header text-center"> <h5 class="modal-title">¿Estás seguro de salir de esta clase?</h5> <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button> <br> </div> <div class="modal-body"> <p>Al desmatricularte perderás el acceso a ella, y el progreso realizado.</p> </div> <div class="modal-footer"> <button class="btn btn-secondary ufps-btn-secondary" click.delegate="removeUser()">Si</button> <button class="btn btn-secondary ufps-btn-secondary" data-dismiss="modal" aria-label="Close">No</button> </div> </div> </div> </div> <div if.bind="authService.isCoach()" class="modal fade" id="remove-user-coach" tabindex="-1" role="dialog" aria-labelledby="remove-user-coach"> <div class="modal-dialog" role="document"> <div class="modal-content"> <div class="modal-header text-center"> <h4 class="modal-title">¿Estás seguro de eliminar este usuario de la clase?</h4> <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button> <br> </div> <div class="modal-body"> <p>Esto no eliminará al usuario de la plataforma, solo de la clase actual.</p> </div> <div class="modal-footer"> <button class="btn btn-secondary ufps-btn-secondary" click.delegate="removeUserFromCoach()">Si</button> <button class="btn btn-secondary ufps-btn-secondary" data-dismiss="modal" aria-label="Close">No</button> </div> </div> </div> </div> </template>'},"modules/syllabus/syllabus-schools/syllabus-schools":function(e,s,t){"use strict";t.r(s),function(e){t.d(s,"HomeSyllabus",(function(){return c}));var a,i,l,r=t("aurelia-framework"),o=t("oHge"),n=t("x4W3"),d=t("W1ll");let c=Object(r.f)(d.a,d.b,d.k)((i=class{constructor(e,s,t){var a,i,r,o;a=this,i="generalPage",o=this,(r=l)&&Object.defineProperty(a,i,{enumerable:r.enumerable,configurable:r.configurable,writable:r.writable,value:r.initializer?r.initializer.call(o):void 0}),this.alertService=e,this.authService=s,this.syllabusService=t,this.syllabusToShow=this.authService.isCoach()?7:8,this.generalPage=1,this.generalTotalPages=1,this.syllabuses=[],this.enrolledSyllabuses=[],this.syllabusesLoaded=!0,this.enrolledSyllabusesLoaded=!0,this.newSyllabus=new n.g,this.editSyllabus=new n.g,this.syllabusToRemove=new n.g,this.syllabusToEnroll=new n.g,this.options=[!0,!1],this.type=1}created(){this.getSyllabuses(this.type)}generalPageChanged(e,s){void 0!==s&&this.getSyllabuses(this.type)}getSyllabuses(e){let s=null;this.authService.isCoach()&&(s=this.authService.getUserId()),this.syllabusService.getSyllabuses(this.syllabusToShow,this.generalPage,s,e).then(e=>{this.generalTotalPages=e.meta.totalPages,0===this.syllabuses.length&&(this.syllabusesLoaded=!1),this.generalTotalPages>0?this.syllabuses=e.data:this.alertService.showMessage(o.b.syllabusesEmpty),this.authService.isStudent()&&this.getEnrolledSyllabuses(this.type)}).catch(e=>{this.syllabusesLoaded=!1,401===e.status?this.alertService.showMessage(o.b.permissionsError):this.alertService.showMessage(o.b.unknownError)})}getEnrolledSyllabuses(e){this.enrolledSyllabuses=[],this.syllabusService.getEnrolledSyllabuses(e).then(e=>{for(let s=0;s<e.user.syllabuses.length;s++)for(let t=0;t<this.syllabuses.length;t++)this.syllabuses[t].id===e.user.syllabuses[s]&&(this.syllabuses[t].enrolled=!0,this.enrolledSyllabuses.push(this.syllabuses[t]));0===this.enrolledSyllabuses.length&&(this.enrolledSyllabusesLoaded=!1)}).catch(e=>{this.enrolledSyllabusesLoaded=!1,401===e.status?this.alertService.showMessage(o.b.permissionsError):this.alertService.showMessage(o.b.unknownError)})}createSyllabus(){this.newSyllabus.privacy||null!==this.newSyllabus.key&&void 0!==this.newSyllabus.key&&""!==this.newSyllabus.key||this.alertService.showMessage(o.b.syllabusKeyNeeded),this.syllabusService.registerSyllabus(this.newSyllabus).then(s=>{this.getSyllabuses(this.type),this.alertService.showMessage(o.b.syllabusCreated),e("#new-syllabus").modal("hide"),this.newSyllabus=new n.g}).catch(()=>{this.alertService.showMessage(o.b.unknownError),e("#new-syllabus").modal("hide")})}showEditSyllabus(s,t,a,i){this.editSyllabus=new n.g(s,t,a,i,""),e("#edit-syllabus").modal("show")}modifySyllabus(){this.editSyllabus.privacy||null!==this.editSyllabus.key&&void 0!==this.editSyllabus.key&&""!==this.editSyllabus.key?this.syllabusService.editSyllabus(this.editSyllabus).then(()=>{this.syllabuses.find(e=>e.id===this.editSyllabus.id).tittle=this.editSyllabus.title,this.alertService.showMessage(o.b.syllabusEdited),e("#edit-syllabus").modal("hide")}).catch(s=>{401===s.status||403===s.status?this.alertService.showMessage(o.b.permissionsError):500===s.status?this.alertService.showMessage(o.b.serverError):this.alertService.showMessage(o.b.unknownError),e("#edit-syllabus").modal("hide")}):this.alertService.showMessage(o.b.syllabusKeyNeeded)}showRemoveSyllabus(s,t){this.syllabusToRemove=new n.g(s,t),e("#remove-syllabus").modal("show")}removeSyllabus(){this.syllabusService.removeSyllabus(this.syllabusToRemove.id).then(()=>{this.syllabuses.splice(this.syllabuses.findIndex(e=>e.id===this.syllabusToRemove.id),1),this.alertService.showMessage(o.b.syllabusRemoved),e("#remove-syllabus").modal("hide")}).catch(s=>{401===s.status||403===s.status?this.alertService.showMessage(o.b.permissionsError):500===s.status?this.alertService.showMessage(o.b.serverError):this.alertService.showMessage(o.b.unknownError),e("#remove-syllabys").modal("hide")})}showEnrollSyllabus(s,t,a,i){this.syllabusToEnroll=new n.g(s,t,a,i,""),e("#enroll-syllabus").modal("show")}enrollSyllabus(){this.syllabusToEnroll.privacy&&(this.syllabusToEnroll.key=void 0),this.syllabusToEnroll.privacy||null!==this.syllabusToEnroll.key&&void 0!==this.syllabusToEnroll.key&&""!==this.editSyllabus.key?this.syllabusService.enrollSyllabus(this.syllabusToEnroll.id,this.syllabusToEnroll.key).then(s=>{this.alertService.showMessage(o.b.enrolledInSyllabus),this.getEnrolledSyllabuses(),e("#enroll-syllabus").modal("hide")}).catch(s=>{this.alertService.showMessage(o.b.unknownError),e("#enroll-syllabus").modal("hide")}):this.alertService.showMessage(o.b.syllabusKeyNeeded)}},u=i.prototype,b="generalPage",h=[r.h],m={configurable:!0,enumerable:!0,writable:!0,initializer:null},g={},Object.keys(m).forEach((function(e){g[e]=m[e]})),g.enumerable=!!g.enumerable,g.configurable=!!g.configurable,("value"in g||g.initializer)&&(g.writable=!0),g=h.slice().reverse().reduce((function(e,s){return s(u,b,e)||e}),g),p&&void 0!==g.initializer&&(g.value=g.initializer?g.initializer.call(p):void 0,g.initializer=void 0),void 0===g.initializer&&(Object.defineProperty(u,b,g),g=null),l=g,a=i))||a;var u,b,h,m,p,g}.call(this,t("EVdn"))},"modules/syllabus/syllabus-schools/syllabus-schools.html":function(e,s,t){e.exports='<template> <require from="../../../resources/attributes/tooltip"></require> <require from="../../../resources/elements/paginator"></require> <div if.bind="authService.isStudent()" class="container ufps-container-logged"> <h1 class="text-right">Mis clases - Training Center High School</h1> <hr> <div class="text-center" if.bind="!enrolledSyllabusesLoaded"> <p>Actualmente no tienes ninguna clase inscrita.</p> </div> <div repeat.for="syllabus of enrolledSyllabuses" class="col-12 col-md-6 col-lg-4 col-xl-3 ufps-card-container"> <a route-href="route: SyllabusDetail; params.bind: {id:syllabus.id}"> <div class="ufps-card"> <div class="ufps-card-title"> <h1>${syllabus.tittle}</h1> </div> <div class="col-6 ufps-card-link"> <a route-href="route: SyllabusDetail; params.bind: {id:syllabus.id}">Ver clase</a> </div> <div class="col-6 ufps-card-link"> <a route-href="route: SyllabusStatistics; params.bind: {id:syllabus.id}">Detalle</a> </div> <div class="fix"></div> </div> </a> </div> </div> <div class="container ufps-container-logged"> <h1 class="text-right" if.bind="authService.isStudent()">Clases disponibles</h1> <h1 class="text-right" if.bind="authService.isCoach()">Mis clases</h1> <hr> <div repeat.for="syllabus of syllabuses" class="col-12 col-md-6 col-lg-4 col-xl-3 ufps-card-container"> <div class="ufps-card"> <div class="ufps-card-title"> <span if.bind="authService.isCoach()" class="ufps-edit-category fas fa-pencil-alt" data-toggle="tooltip" title="Editar los datos de la clase" click.delegate="showEditSyllabus(syllabus.id, syllabus.tittle, syllabus.description, syllabus.public)" tooltip></span> <span if.bind="authService.isCoach()" class="ufps-remove-category fas fa-times-circle" data-toggle="tooltip" title="Eliminar la clase" click.delegate="showRemoveSyllabus(syllabus.id, syllabus.tittle)" tooltip></span> <h1>${syllabus.tittle}</h1> </div> <div if.bind="authService.isCoach()" class="col-6 ufps-card-link"> <a route-href="route: SyllabusDetail; params.bind: {id:syllabus.id}">Detalle</a> </div> <div if.bind="authService.isCoach()" class="col-6 ufps-card-link"> <a route-href="route: SyllabusStatistics; params.bind: {id:syllabus.id}">Estadísticas</a> </div> <div if.bind="authService.isStudent()" class="col-6 ufps-card-link"> <span if.bind="syllabus.public">Público</span> <span if.bind="!syllabus.public">Privado</span> </div> <div if.bind="authService.isStudent() && !syllabus.enrolled" class="col-xs-6 ufps-card-link"> <a click.delegate="showEnrollSyllabus(syllabus.id, syllabus.tittle, syllabus.description, syllabus.public)">Registrarse</a> </div> <div if.bind="authService.isStudent() && syllabus.enrolled" class="col-xs-6 ufps-card-link"> <span>Registrado </span></div> <div class="fix"></div> </div> </div> <div if.bind="authService.isCoach()" class="col-12 col-md-6 col-lg-4 col-xl-3 ufps-card-new ufps-card-container"> <div class="ufps-card" data-toggle="modal" data-target="#new-syllabus"> <div class="ufps-card-title"> <h1> <i class="fas fa-plus-circle"></i> </h1> </div> <div class="col-12 ufps-card-link"> Nueva clase </div> <div class="fix"></div> </div> </div> <div class="fix"></div> <paginator page.bind="generalPage" total-pages.bind="generalTotalPages"></paginator> </div> <div if.bind="authService.isCoach()" class="modal fade" id="new-syllabus" tabindex="-1" role="dialog" aria-labelledby="new-syllabus"> <div class="modal-dialog" role="document"> <div class="modal-content"> <div class="modal-header"> <h4 class="modal-title">Nueva clase</h4> <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button> </div> <br> <div class="modal-body"> <form submit.delegate="createSyllabus()"> <div class="form-group"> <label>Titulo</label> <input type="text" class="form-control" placeholder="Nombre de la clase" value.bind="newSyllabus.title" required> </div> <div class="form-group"> <label>Descripción</label> <input type="text" class="form-control" placeholder="Descripión de la clase" value.bind="newSyllabus.description" required> </div> <div class="form-check"> <label> <input type="radio" name="privacy" model.bind="true" checked.bind="newSyllabus.privacy" checked="checked"> Público </label> </div> <div class="form-check"> <label> <input type="radio" name="privacy" model.bind="false" checked.bind="newSyllabus.privacy" checked="checked"> Privado <span>(requiere clave)</span> </label> </div> <div class="form-group" if.bind="!newSyllabus.privacy"> <label>Clave (Se recomienda reemplazar la siguiente clave)</label> <input type="text" class="form-control" placeholder="clave que deben ingresar los estudiantes para acceder a la clase" value.bind="newSyllabus.key" required> </div> <div class="text-right"> <input type="submit" class="btn btn-secondary ufps-btn-secondary" value="Registrar clase"> </div> </form> </div> </div> </div> </div> <div if.bind="authService.isCoach()" class="modal fade" id="edit-syllabus" tabindex="-1" role="dialog" aria-labelledby="edit-syllabus"> <div class="modal-dialog" role="document"> <div class="modal-content"> <div class="modal-header"> <h4 class="modal-title">Editar Syllabus</h4> <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button> </div> <br> <div class="modal-body"> <form submit.delegate="modifySyllabus()"> <div class="form-group"> <label>Titulo</label> <input type="text" class="form-control" placeholder="Nombre del syllabus" value.bind="editSyllabus.title" required> </div> <div class="form-group"> <label>Descripción</label> <input type="text" class="form-control" placeholder="Descripión del syllabus" value.bind="editSyllabus.description" required> </div> <div class="form-check"> <label> <input type="radio" name="privacy" model.bind="true" checked.bind="editSyllabus.privacy"> Público </label> </div> <div class="form-check"> <label> <input type="radio" name="privacy" model.bind="false" checked.bind="editSyllabus.privacy"> Privado <span>(requiere clave)</span> </label> </div> <div class="form-group" if.bind="!editSyllabus.privacy"> <label>Clave (obligatorio: Confirme la clave o ingrese una nueva)</label> <input type="text" class="form-control" placeholder="clave que deben ingresar los estudiantes para acceder a la clase" value.bind="editSyllabus.key" required> </div> <div class="text-right"> <input type="submit" class="btn btn-secondary ufps-btn-secondary" value="Editar clase"> </div> </form> </div> </div> </div> </div> <div if.bind="authService.isCoach()" class="modal fade" id="remove-syllabus" tabindex="-1" role="dialog" aria-labelledby="remove-syllabus"> <div class="modal-dialog" role="document"> <div class="modal-content"> <div class="modal-header text-center"> <h4 class="modal-title">¿Estás seguro de eliminar la clase ${syllabusToRemove.title}?</h4> <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button> </div> <br> <div class="modal-body"> <p>Esta operación no se puede deshacer</p> </div> <div class="modal-footer"> <button class="btn btn-secondary ufps-btn-secondary" click.delegate="removeSyllabus()">Si</button> <button class="btn btn-secondary ufps-btn-secondary" data-dismiss="modal" aria-label="Close">No</button> </div> </div> </div> </div> <div if.bind="authService.isStudent()" class="modal fade" id="enroll-syllabus" tabindex="-1" role="dialog" aria-labelledby="enroll-syllabus"> <div class="modal-dialog" role="document"> <div class="modal-content"> <div class="modal-header text-center"> <h4 class="modal-title">¿Quieres registrarte en ${syllabusToEnroll.title}?</h4> <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button> </div> <br> <div class="modal-body"> <form submit.delegate="enrollSyllabus()"> <div if.bind="!syllabusToEnroll.privacy"> <p>Ingresa la clave de esta clase (si no la tienes, comunicate con el profesor/coach a cargo)</p> <div class="form-group"> <input type="text" class="form-control" value.bind="syllabusToEnroll.key"> </div> </div> </form></div> <div class="modal-footer"> <input type="submit" class="btn btn-secondary ufps-btn-secondary" value="Si"> <input type="submit" class="btn btn-secondary ufps-btn-secondary" data-dismiss="modal" aria-label="Close" value="No">  </div> </div> </div> </div> </template>'},"modules/syllabus/syllabus-statistics/syllabus-statistics":function(e,s,t){"use strict";t.r(s),t.d(s,"SyllabusStatistics",(function(){return d}));var a,i,l,r=t("aurelia-framework"),o=t("oHge"),n=t("W1ll");let d=Object(r.f)(n.a,n.k)((i=class{constructor(e,s){var t,a,i,r;t=this,a="page",r=this,(i=l)&&Object.defineProperty(t,a,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(r):void 0}),this.alertService=e,this.syllabusService=s,this.page=1,this.totalPages=1,this.users=[]}pageChanged(e,s){void 0!==s&&this.getStatistics()}activate(e,s){this.routeConfig=s,this.id=e.id,this.getStatistics()}getStatistics(){this.syllabusService.getStatistics(this.id,30,this.page).then(e=>{this.totalPages=e.meta.totalPages,this.totalPages>0&&(this.users=e.data)}).catch(e=>{404===e.status?this.alertService.showMessage(o.b.unknownError):this.alertService.showMessage(o.b.serverError)})}},c=i.prototype,u="page",b=[r.h],h={configurable:!0,enumerable:!0,writable:!0,initializer:null},p={},Object.keys(h).forEach((function(e){p[e]=h[e]})),p.enumerable=!!p.enumerable,p.configurable=!!p.configurable,("value"in p||p.initializer)&&(p.writable=!0),p=b.slice().reverse().reduce((function(e,s){return s(c,u,e)||e}),p),m&&void 0!==p.initializer&&(p.value=p.initializer?p.initializer.call(m):void 0,p.initializer=void 0),void 0===p.initializer&&(Object.defineProperty(c,u,p),p=null),l=p,a=i))||a;var c,u,b,h,m,p},"modules/syllabus/syllabus-statistics/syllabus-statistics.html":function(e,s,t){e.exports='<template> <require from="../../../resources/elements/filter"></require> <require from="../../../resources/elements/paginator"></require> <div class="container"> <ol class="breadcrumb"> <li class="breadcrumb-item"> <a href="/clases">Clases</a> </li> <li class="breadcrumb-item active">Clasificación de la clase actual</li> </ol> <h1 class="text-right">Clasificación de la clase</h1> <hr> <table> <thead> <tr> <th class="text-center" style="width:5%">Puesto</th> <th class="text-center" style="width:75%">Usuario</th> <th class="text-center" style="width:10%">Soluciones correctas</th> <th class="text-center" style="width:10%">Envios realizados</th> </tr> </thead> <tbody> <tr repeat.for="user of users"> <td class="text-center">${($index + 1) + ((page - 1) * 30)}</td> <td>${user.name}</td> <td class="text-center">${user.accepted}</td> <td class="text-center">${user.total}</td> </tr> <tr if.bind="users.length === 0"> <td></td> <td>No hay usuarios actualmente registrados en esta clase.</td> <td> </td> <td> </td> </tr> </tbody> </table> <paginator page.bind="page" total-pages.bind="totalPages"></paginator> </div> </template> '},"modules/syllabus/syllabus.html":function(e,s){e.exports='<template> <div slot="content" class="body-slot"> <router-view></router-view> </div> </template> '},"modules/syllabus/view-assignment/view-assignment":function(e,s,t){"use strict";t.r(s),t.d(s,"ViewAssignment",(function(){return n}));var a,i=t("aurelia-framework"),l=t("oHge"),r=t("x4W3"),o=t("W1ll");let n=Object(i.f)(o.a,o.b,o.k)(a=class{constructor(e,s,t){this.alertService=e,this.authService=s,this.syllabusService=t,this.assignment=new r.a,this.sortDisplay="Id",this.byDisplay="Ascendente"}activate(e,s){this.routeConfig=s,this.id=e.id,this.getAssignment()}getAssignment(){this.syllabusService.loadAssignment(this.id).then(e=>{this.assignment=new r.a(e.assignment.tittle,e.assignment.description,e.assignment.init_date,e.assignment.end_date,void 0,e.assignment.syllabus_id,this.id),this.assignment.adjuntProblems(e.assignment.problems)}).catch(e=>{401===e.status?this.alertService.showMessage(l.b.permissionsError):this.alertService.showMessage(l.b.unknownError)})}setSort(e){this.sortDisplay=e,this.sortProblems()}setBy(e){this.byDisplay=e,this.sortProblems()}sortProblems(){"Id"===this.sortDisplay&&"Ascendente"===this.byDisplay?this.assignment.problemsLoaded.sort((e,s)=>parseInt(e.id)-parseInt(s.id)):"Id"===this.sortDisplay&&"Descendente"===this.byDisplay?this.assignment.problemsLoaded.sort((e,s)=>parseInt(s.id)-parseInt(e.id)):"Dificultad"===this.sortDisplay&&"Ascendente"===this.byDisplay?this.assignment.problemsLoaded.sort((e,s)=>parseInt(e.level)-parseInt(s.level)):"Dificultad"===this.sortDisplay&&"Descendente"===this.byDisplay&&this.assignment.problemsLoaded.sort((e,s)=>parseInt(s.level)-parseInt(e.level))}})||a},"modules/syllabus/view-assignment/view-assignment.html":function(e,s,t){e.exports='<template> <require from="../../../resources/attributes/tooltip"></require> <div class="container ufps-container-logged"> <ol class="breadcrumb"> <li class="breadcrumb-item"> <a href="/clases">Clases</a> </li> <li class="breadcrumb-item"> <a href="/clases/clases/${assignment.syllabusId}">Clase actual</a> </li> <li class="breadcrumb-item active">Tarea "${assignment.title}"</li> </ol> <h1 class="text-right">${assignment.title}</h1> <p class="text-right">${assignment.description}</p> <p class="text-right">${assignment.getStringAvailability()}</p> <hr> <div class="col-md-12"> Ordenar por <div class="dropdown dropdown-inline ufps-dropdown"> <button class="btn btn-secondary dropdown-toggle" type="button" id="sortBy" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"> ${sortDisplay} <span class="caret"></span> </button> <ul class="dropdown-menu ufps-dropdown-menu dropdown-mini" aria-labelledby="sortBy"> <li> <a click.delegate="setSort(\'Id\')">Id</a> </li> <li> <a click.delegate="setSort(\'Dificultad\')">Dificultad</a> </li> </ul> </div> en forma <div class="dropdown dropdown-inline ufps-dropdown"> <button class="btn btn-secondary dropdown-toggle" type="button" id="orderBy" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"> ${byDisplay} <span class="caret"></span> </button> <ul class="dropdown-menu ufps-dropdown-menu dropdown-mini" aria-labelledby="orderBy"> <li> <a click.delegate="setBy(\'Ascendente\')">Ascendente</a> </li> <li> <a click.delegate="setBy(\'Descendente\')">Descendente</a> </li> </ul> </div> </div> <div class="ufps-separator"></div> <table> <thead> <tr> <th class="text-center" style="width:5%">Id</th> <th class="text-center" style="width:70%">Problema</th> <th class="text-center" style="width:10%">Dificultad</th> <th class="text-center" style="width:15%">Idioma</th> </tr> </thead> <tbody> <tr repeat.for="problem of assignment.problemsLoaded"> <td class="text-center">${problem.id}</td> <td class="text-left ufps-td-problem"> <p if.bind="problem.isInSpanish() && language !== \'Inglés\'" class="ufps-name-problem-list"> <a route-href="route: ViewProblem; params.bind: {assignmentProblemId:problem.auxiliarId, assignmentId:assignment.id, problemId: problem.id, lang: \'es\'}">${problem.titleES}</a> </p> <p if.bind="!problem.isInSpanish() || (problem.isInEnglish() && language === \'Inglés\')" class="ufps-name-problem-list"> <a route-href="route: ViewProblem; params.bind: {assignmentProblemId:problem.auxiliarId, assignmentId:assignment.id, problemId: problem.id, lang: \'en\'}">${problem.titleEN}</a> </p> </td> <td class="text-center">${problem.level}</td> <td class="text-center ufps-language"> <span class="${problem.isInSpanish() ? \'active\' : \'inactive\'}"> <a route-href="route: ViewProblem; params.bind: {assignmentProblemId:problem.auxiliarId, assignmentId:assignment.id, problemId: problem.id, lang: \'es\'}">ES</a> </span> | <span class="${problem.isInEnglish() ? \'active\' : \'inactive\'}"> <a route-href="route: ViewProblem; params.bind: {assignmentProblemId:problem.auxiliarId, assignmentId:assignment.id, problemId: problem.id, lang: \'en\'}">EN</a> </span> </td> </tr> </tbody> </table> </div> </template> '},"modules/syllabus/view-problem/view-problem":function(e,s,t){"use strict";t.r(s),t.d(s,"ViewProblem",(function(){return p}));var a,i,l,r,o,n=t("aurelia-framework"),d=t("4ysu"),c=t("oHge"),u=t("x4W3"),b=t("W1ll");function h(e,s,t,a){t&&Object.defineProperty(e,s,{enumerable:t.enumerable,configurable:t.configurable,writable:t.writable,value:t.initializer?t.initializer.call(a):void 0})}function m(e,s,t,a,i){var l={};return Object.keys(a).forEach((function(e){l[e]=a[e]})),l.enumerable=!!l.enumerable,l.configurable=!!l.configurable,("value"in l||l.initializer)&&(l.writable=!0),l=t.slice().reverse().reduce((function(t,a){return a(e,s,t)||t}),l),i&&void 0!==l.initializer&&(l.value=l.initializer?l.initializer.call(i):void 0,l.initializer=void 0),void 0===l.initializer&&(Object.defineProperty(e,s,l),l=null),l}let p=Object(n.f)(b.a,b.b,b.i,b.k,d.d)((l=m((i=class{constructor(e,s,t,a,i){h(this,"now",l,this),h(this,"assignmentLoaded",r,this),h(this,"dateLoaded",o,this),this.alertService=e,this.authService=s,this.problemService=t,this.syllabusService=a,this.routerService=i,this.languages=c.c.languages,this.assignment=new u.a,this.language,this.code,this.sourceValid=!1,this.validDate=-1,this.now}assignmentLoadedChanged(e,s){this.validateDate()}dateLoadedChanged(e,s){this.validateDate()}validateDate(){this.dateLoaded&&this.assignmentLoaded&&setInterval(()=>{this.now<this.startDate?this.validDate=1:this.now>this.endDate?this.validDate=2:this.validDate=0},1e3)}activate(e,s){this.routeConfig=s,this.assignmentId=e.assignmentId,this.assignmentProblemId=e.assignmentProblemId,this.problemId=e.problemId,this.lang=e.lang||"en",this.problemService.getProblem(this.problemId).then(s=>{s=s.problem,this.problem=new u.f(parseInt(e.problemId),s.title_en,s.title_es,parseInt(s.level),parseInt(s.category),void 0,void 0,s.description_en,s.description_es,"undefined"!==s.example_input?s.example_input.replace(/\r\n/g,"\n"):"","undefined"!==s.example_output?s.example_output.replace(/\r\n/g,"\n"):"",parseFloat(s.time_limit),s.user_id,s.user.username),"en"!==this.lang||this.problem.isInEnglish()?"es"!==this.lang||this.problem.isInSpanish()||(this.lang="en"):this.lang="es",this.getAssignment()}).catch(e=>{401===e.status||403===e.status?this.alertService.showMessage(c.b.permissionsError):500===e.status?this.alertService.showMessage(c.b.serverError):this.alertService.showMessage(c.b.unknownError),this.routerService.navigate("")})}getAssignment(){this.syllabusService.loadAssignment(this.assignmentId).then(e=>{this.startDate=new Date(e.assignment.init_date),this.endDate=new Date(e.assignment.end_date),this.assignmentLoaded=!0,this.assignment=new u.a(e.assignment.tittle,e.assignment.description,e.assignment.init_date,e.assignment.end_date,void 0,e.assignment.syllabus_id,this.id)}).catch(e=>{401===e.status?this.alertService.showMessage(c.b.permissionsError):this.alertService.showMessage(c.b.unknownError)})}showES(){this.problem.isInSpanish()&&(this.lang="es")}showEN(){this.problem.isInEnglish()&&(this.lang="en")}validateCode(){if(1===this.code.length)if(this.code[0].type.startsWith("text/")||this.code[0].name.endsWith(".java")||this.code[0].name.endsWith(".cpp")||this.code[0].name.endsWith(".c")||this.code[0].name.endsWith(".cc")||this.code[0].name.endsWith(".cp")||this.code[0].name.endsWith(".cxx")||this.code[0].name.endsWith(".py"))if(this.sourceValid=!0,this.code[0].name.endsWith(".java")){this.language="Java";var e=new FileReader;e.onload=()=>{let s=e.result.replace(/ /g,"");s=s.replace(/\n|\r\n|\r/g,""),s.search("publicclassMain")<0&&(this.code=null,this.sourceValid=!1,this.alertService.showMessage(c.b.invalidJavaClassname))},e.readAsText(this.code[0])}else this.code[0].name.endsWith(".py")?this.language="Python":(this.code[0].name.endsWith(".cpp")||this.code[0].name.endsWith(".c")||this.code[0].name.endsWith(".cc")||this.code[0].name.endsWith(".cp")||this.code[0].name.endsWith(".cxx"))&&(this.language="C++");else this.code=null,this.sourceValid=!1,this.alertService.showMessage(c.b.invalidCode)}submit(){this.sourceValid?null===this.language?this.alertService.showMessage(c.b.invalidLanguage):this.problemService.submitSolution(this.problemId,this.language,this.assignmentProblemId,void 0,this.code[0]).then(()=>{this.alertService.showMessage(c.b.submittedSolution),this.language=null,this.code=null,this.sourceValid=!1}).catch(e=>{401===e.status||403===e.status?this.alertService.showMessage(c.b.permissionsError):500===e.status?this.alertService.showMessage(c.b.serverError):this.alertService.showMessage(c.b.unknownError)}):this.alertService.showMessage(c.b.invalidCode)}}).prototype,"now",[n.h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),r=m(i.prototype,"assignmentLoaded",[n.h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),o=m(i.prototype,"dateLoaded",[n.h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),a=i))||a},"modules/syllabus/view-problem/view-problem.html":function(e,s,t){e.exports='<template> <require from="../../../resources/attributes/markdown"></require> <require from="../../../resources/attributes/tooltip"> </require> <require from="../../../resources/elements/clock"></require> <clock date.bind="now" date-loaded.bind="dateLoaded" show-timer.bind="false"></clock> <div class="container-fluid"> <ol class="breadcrumb"> <li class="breadcrumb-item"> <a href="/clases">Clases</a> </li> <li class="breadcrumb-item"> <a href="/clases/clases/${assignment.syllabusId}">Clase actual</a> </li> <li class="breadcrumb-item"> <a href="/clases/tarea/${assignmentId}">Tarea actual</a> </li> <li class="breadcrumb-item active" if.bind="lang === \'es\'">Problema "${problem.titleES}"</li> <li class="breadcrumb-item active" if.bind="lang === \'en\'">Problema "${problem.titleEN}"</li> </ol> <div class="container-fluid"> <div class="row"> <div class="col-lg-9"> <div class="ufps-separator-mini"></div> <div class="card"> <div class="card-body" show.bind="lang === \'es\'"> <h1 class="text-center ufps-problem-title">${problem.titleES}</h1> <p class="ufps-language text-center"> <span class="${problem.isInSpanish() ? \'active\' : \'inactive\'}" click.delegate="showES()">ES</span> | <span class="${problem.isInEnglish() ? \'active\' : \'inactive\'}" click.delegate="showEN()">EN</span> </p> <p class="ufps-markdown-editor" markdown.bind="problem.descriptionES"></p> <div class="row"> <div class="col-lg-6"> <h3 class="text-center">Entrada de ejemplo</h3> <div class="card bg-light card-body mb-3 example-in-out"> <pre>${problem.exampleInput}</pre> </div> </div> <div class="col-lg-6"> <h3 class="text-center">Salida de ejemplo</h3> <div class="card bg-light card-body mb-3 example-in-out"> <pre>${problem.exampleOutput}</pre> </div> </div> </div> </div> <div class="card-body" show.bind="lang === \'en\'"> <h1 class="text-center ufps-problem-title">${problem.titleEN}</h1> <p class="ufps-language text-center"> <span class="${problem.isInSpanish() ? \'active\' : \'inactive\'}" click.delegate="showES()">ES</span> | <span class="${problem.isInEnglish() ? \'active\' : \'inactive\'}" click.delegate="showEN()">EN</span> </p> <p class="ufps-markdown-editor" markdown.bind="problem.descriptionEN"></p> <div class="row"> <div class="col-lg-6"> <h3 class="text-center">Entrada de ejemplo</h3> <div class="card bg-light card-body mb-3 example-in-out"> <pre>${problem.exampleInput}</pre> </div> </div> <div class="col-lg-6"> <h3 class="text-center">Salida de ejemplo</h3> <div class="card bg-light card-body mb-3 example-in-out"> <pre>${problem.exampleOutput}</pre> </div> </div> </div> </div> </div> </div> <div class="col-lg-3"> <div class="ufps-separator-mini"></div> <div class="card"> <div class="card-body"> <p show.bind="lang === \'en\'"> <strong>Problema:</strong> ${problem.titleEN}</p> <p show.bind="lang === \'es\'"> <strong>Problema:</strong> ${problem.titleES}</p> <p> <strong>Dificultad:</strong> ${problem.level}</p> <p if.bind="validDate === 1"> <strong>Esta tarea aún no puede ser enviada.</strong> ${assignment.getStringAvailability().replace(\'Disponible\', \'Estará disponible\')} </p> <p if.bind="validDate === 2"> <strong>Esta tarea ya no puede ser enviada.</strong> ${assignment.getStringAvailability().replace(\'Disponible\', \'Estuvo disponible\')} </p> <p if.bind="validDate === 0">Selecciona el archivo con tu código, y el lenguaje a utilizar.</p> <form if.bind="validDate === 0" class="ufps-submit-form" submit.delegate="submit()" enctype="multipart/form-data"> <input type="file" name="input-file" id="input-file" class="inputfile-btn" change.delegate="validateCode()" accept=".py, .java, .cpp" files.bind="code"> <label for="${validDate > 0 ? \'\' : \'input-file\'}" tooltip data-toggle="tooltip" title="Archivo con la solución al problema">Seleccionar <span class="fas fa-check" show.bind="sourceValid"></span> </label> <div class="input-group"> <select class="form-control" value.bind="language"> <option required model.bind="null">Lenguaje...</option> <option repeat.for="lg of languages" model.bind="lg">${lg}</option> </select> </div> <input type="submit" value="Enviar" class="btn ufps-btn-submit"> </form> <p if.bind="validDate === 2">Si lo deseas, puedes enviar tu solución en modo práctica. No sumará puntos a la tarea, pero calificará tu solución.</p> <a if.bind="validDate === 2" href="/problemas/${problemId}/detalle" class="btn btn-submit ufps-btn-submit ufps-btn-edit-problem">Enviar en modo práctica</a> </div> </div> </div> </div> </div> </div> </template> '}}]);
//# sourceMappingURL=vendors~7ff07dc9.fa7a266d559c90a05a99.bundle.map