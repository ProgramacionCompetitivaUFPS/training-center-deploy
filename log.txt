
> ufps-training-center@1.0.0 start /usr/src/app
> node ./bin/www

************  INFO CONFIG **********
{ url: 'mysql://trainingcenter2:Tr4iningC3nt3r-2022.0p]XhmCpZzIOYmFN3BYA@10.128.0.7:3306/trainingcenter2?reconnect=true',
  dialect: 'mysql' }
Executing (default): CREATE TABLE IF NOT EXISTS `categories` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL UNIQUE, `type` INTEGER NOT NULL DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `categories`
Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `code` VARCHAR(255), `type` INTEGER NOT NULL, `username` VARCHAR(255) NOT NULL UNIQUE, `socket_id` VARCHAR(255), `education_level` INTEGER, `institution` VARCHAR(255), `profile_image_url` VARCHAR(255), `status_learning` INTEGER, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `users`
Executing (default): CREATE TABLE IF NOT EXISTS `problems` (`id` INTEGER NOT NULL auto_increment , `title_en` VARCHAR(255), `title_es` VARCHAR(255), `time_limit` DECIMAL NOT NULL, `level` INTEGER NOT NULL, `input` VARCHAR(255) NOT NULL, `output` VARCHAR(255) NOT NULL, `description_en` TEXT, `description_es` TEXT, `example_input` TEXT NOT NULL, `example_output` TEXT NOT NULL, `visibility` INTEGER, `solution_url` VARCHAR(255), `category_id` INTEGER, `user_id` INTEGER NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `problems`
Executing (default): CREATE TABLE IF NOT EXISTS `syllabuses` (`id` INTEGER NOT NULL auto_increment , `tittle` VARCHAR(255) NOT NULL, `description` TEXT NOT NULL, `type` INTEGER DEFAULT 0, `user_id` INTEGER, `public` TINYINT(1) NOT NULL, `key` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `syllabuses`
Executing (default): CREATE TABLE IF NOT EXISTS `assignments` (`id` INTEGER NOT NULL auto_increment , `tittle` VARCHAR(255) NOT NULL, `description` TEXT NOT NULL, `init_date` DATETIME NOT NULL, `end_date` DATETIME NOT NULL, `syllabus_id` INTEGER, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`syllabus_id`) REFERENCES `syllabuses` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `assignments`
Executing (default): CREATE TABLE IF NOT EXISTS `assignment_problems` (`id` INTEGER NOT NULL auto_increment , `problem_id` INTEGER, `assignment_id` INTEGER, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, UNIQUE `UK01` (`problem_id`, `assignment_id`), UNIQUE `assignment_problems_problemId_assignmentId_unique` (`assignment_id`, `problem_id`), PRIMARY KEY (`id`), FOREIGN KEY (`problem_id`) REFERENCES `problems` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`assignment_id`) REFERENCES `assignments` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `assignment_problems`
Executing (default): CREATE TABLE IF NOT EXISTS `blacklist_tokens` (`id` INTEGER NOT NULL auto_increment , `token` VARCHAR(255), `exp_date` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `blacklist_tokens`
Executing (default): CREATE TABLE IF NOT EXISTS `contests` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `description` TEXT, `init_date` DATETIME NOT NULL, `end_date` DATETIME NOT NULL, `rules` TEXT, `user_id` INTEGER, `public` TINYINT(1) NOT NULL, `key` VARCHAR(255), `type` INTEGER NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `contests`
Executing (default): CREATE TABLE IF NOT EXISTS `contests_problems` (`id` INTEGER NOT NULL auto_increment , `problem_id` INTEGER, `contest_id` INTEGER, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, UNIQUE `UK01` (`problem_id`, `contest_id`), UNIQUE `contests_problems_problemId_contestId_unique` (`contest_id`, `problem_id`), PRIMARY KEY (`id`), FOREIGN KEY (`problem_id`) REFERENCES `problems` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`contest_id`) REFERENCES `contests` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `contests_problems`
Executing (default): CREATE TABLE IF NOT EXISTS `contests_students` (`id` INTEGER NOT NULL auto_increment , `contest_id` INTEGER, `user_id` INTEGER, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, UNIQUE `UK01` (`contest_id`, `user_id`), UNIQUE `contests_students_userId_contestId_unique` (`contest_id`, `user_id`), PRIMARY KEY (`id`), FOREIGN KEY (`contest_id`) REFERENCES `contests` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `contests_students`
Executing (default): CREATE TABLE IF NOT EXISTS `materials` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `category_id` INTEGER, `description` VARCHAR(255) NOT NULL, `url` VARCHAR(255) NOT NULL, `status` TINYINT(1) NOT NULL, `type` INTEGER NOT NULL DEFAULT 0, `body` TEXT, `user_id` INTEGER, `level` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `materials`
Executing (default): CREATE TABLE IF NOT EXISTS `submissions` (`id` INTEGER NOT NULL auto_increment , `problem_id` INTEGER, `user_id` INTEGER, `user_team_id` INTEGER DEFAULT 0, `file_name` VARCHAR(255) NOT NULL, `file_path` VARCHAR(255) NOT NULL, `language` VARCHAR(255) NOT NULL, `execution_time` DOUBLE PRECISION, `verdict` VARCHAR(255), `status` VARCHAR(255) NOT NULL, `assignment_problem_id` INTEGER, `contest_problem_id` INTEGER, `blockly_file_name` VARCHAR(255), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `contests_problem_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`problem_id`) REFERENCES `problems` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`assignment_problem_id`) REFERENCES `assignment_problems` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`contest_problem_id`) REFERENCES `contests_problems` (`id`), FOREIGN KEY (`contests_problem_id`) REFERENCES `contests_problems` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `submissions`
Executing (default): CREATE TABLE IF NOT EXISTS `syllabus_materials` (`id` INTEGER NOT NULL auto_increment , `material_id` INTEGER, `syllabus_id` INTEGER, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, UNIQUE `UK01` (`material_id`, `syllabus_id`), UNIQUE `syllabus_materials_syllabusId_materialId_unique` (`material_id`, `syllabus_id`), PRIMARY KEY (`id`), FOREIGN KEY (`material_id`) REFERENCES `materials` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`syllabus_id`) REFERENCES `syllabuses` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `syllabus_materials`
Executing (default): CREATE TABLE IF NOT EXISTS `syllabus_students` (`id` INTEGER NOT NULL auto_increment , `syllabus_id` INTEGER, `user_id` INTEGER, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, UNIQUE `UK01` (`syllabus_id`, `user_id`), UNIQUE `syllabus_students_userId_syllabusId_unique` (`syllabus_id`, `user_id`), PRIMARY KEY (`id`), FOREIGN KEY (`syllabus_id`) REFERENCES `syllabuses` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `syllabus_students`
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 165565,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1654548751615,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: false },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::ffff:10.128.0.22', family: 'IPv6', port: 37548 },
     [Symbol(asyncId)]: 930,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 932,
     [Symbol(triggerAsyncId)]: 930 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 165565,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1654548751615,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: false },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::ffff:10.128.0.22', family: 'IPv6', port: 37548 },
     [Symbol(asyncId)]: 930,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 932,
     [Symbol(triggerAsyncId)]: 930 },
  httpVersionMajor: 1,
  httpVersionMinor: 0,
  httpVersion: '1.0',
  complete: true,
  headers: 
   { host: 'trainingcenter.cloud.ufps.edu.co',
     'x-real-ip': '200.93.148.10',
     'x-forwarded-for': '200.93.148.10',
     'x-forwarded-proto': 'https',
     connection: 'close',
     'content-length': '82',
     'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
     'sec-ch-ua-mobile': '?0',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
     'sec-ch-ua-platform': '"Linux"',
     'content-type': 'application/json',
     accept: '*/*',
     origin: 'https://trainingcenter.cloud.ufps.edu.co',
     'sec-fetch-site': 'same-origin',
     'sec-fetch-mode': 'cors',
     'sec-fetch-dest': 'empty',
     referer: 'https://trainingcenter.cloud.ufps.edu.co/bienvenido',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'es-419,es;q=0.9,en;q=0.8',
     cookie: '_ga=GA1.3.1685976720.1650293779; twk_uuid_5f3c9dcdcc6a6a5947aced9b=%7B%22uuid%22%3A%221.4851VSl7aKtmkHV1Tu0iSpqnxnv4RPHU2jCDdLYkdx1WTmxE8V08ZiWRrghFHsTGVjey4li5dA8078LWjy5VGE0n1ElOsOS0QnVR5pWDnrBbdWapWVpnueTLUVtaTfK58HRq4jBdeKmbu1i%22%2C%22version%22%3A3%2C%22domain%22%3A%22ufps.edu.co%22%2C%22ts%22%3A1651009198569%7D; AMCV_4D6368F454EC41940A4C98A6%40AdobeOrg=-2121179033%7CMCIDTS%7C19109%7CMCMID%7C28745598136514628203617591386012588135%7CMCAAMLH-1651614046%7C4%7CMCAAMB-1651614046%7CRKhpRz8krg2tLO6pguXWp5olkAcUniQYPHaMWWgdJ3xzPWQmdj0y%7CMCOPTOUT-1651016446s%7CNONE%7CMCAID%7CNONE%7CMCSYNCSOP%7C411-19116%7CMCCIDH%7C1483836512%7CvVersion%7C5.3.0; mbox=session#a3bcfeec4d3d4646a7431b6a383a58b7#1651011907|PC#a3bcfeec4d3d4646a7431b6a383a58b7.34_0#1714254847; s_pers=%20v8%3D1651010047545%7C1745618047545%3B%20v8_s%3DFirst%2520Visit%7C1651011847545%3B%20c19%3Dsc%253Asearch%253Adocument%2520results%7C1651011847549%3B%20v68%3D1651010045843%7C1651011847561%3B; _gid=GA1.3.385273413.1654524735' },
  rawHeaders: 
   [ 'Host',
     'trainingcenter.cloud.ufps.edu.co',
     'X-Real-IP',
     '200.93.148.10',
     'X-Forwarded-For',
     '200.93.148.10',
     'X-Forwarded-Proto',
     'https',
     'Connection',
     'close',
     'Content-Length',
     '82',
     'sec-ch-ua',
     '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
     'sec-ch-ua-mobile',
     '?0',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
     'sec-ch-ua-platform',
     '"Linux"',
     'Content-Type',
     'application/json',
     'Accept',
     '*/*',
     'Origin',
     'https://trainingcenter.cloud.ufps.edu.co',
     'Sec-Fetch-Site',
     'same-origin',
     'Sec-Fetch-Mode',
     'cors',
     'Sec-Fetch-Dest',
     'empty',
     'Referer',
     'https://trainingcenter.cloud.ufps.edu.co/bienvenido',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'es-419,es;q=0.9,en;q=0.8',
     'Cookie',
     '_ga=GA1.3.1685976720.1650293779; twk_uuid_5f3c9dcdcc6a6a5947aced9b=%7B%22uuid%22%3A%221.4851VSl7aKtmkHV1Tu0iSpqnxnv4RPHU2jCDdLYkdx1WTmxE8V08ZiWRrghFHsTGVjey4li5dA8078LWjy5VGE0n1ElOsOS0QnVR5pWDnrBbdWapWVpnueTLUVtaTfK58HRq4jBdeKmbu1i%22%2C%22version%22%3A3%2C%22domain%22%3A%22ufps.edu.co%22%2C%22ts%22%3A1651009198569%7D; AMCV_4D6368F454EC41940A4C98A6%40AdobeOrg=-2121179033%7CMCIDTS%7C19109%7CMCMID%7C28745598136514628203617591386012588135%7CMCAAMLH-1651614046%7C4%7CMCAAMB-1651614046%7CRKhpRz8krg2tLO6pguXWp5olkAcUniQYPHaMWWgdJ3xzPWQmdj0y%7CMCOPTOUT-1651016446s%7CNONE%7CMCAID%7CNONE%7CMCSYNCSOP%7C411-19116%7CMCCIDH%7C1483836512%7CvVersion%7C5.3.0; mbox=session#a3bcfeec4d3d4646a7431b6a383a58b7#1651011907|PC#a3bcfeec4d3d4646a7431b6a383a58b7.34_0#1714254847; s_pers=%20v8%3D1651010047545%7C1745618047545%3B%20v8_s%3DFirst%2520Visit%7C1651011847545%3B%20c19%3Dsc%253Asearch%253Adocument%2520results%7C1651011847549%3B%20v68%3D1651010045843%7C1651011847561%3B; _gid=GA1.3.385273413.1654524735' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/auth',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 165565,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1654548751615,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: false },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::ffff:10.128.0.22', family: 'IPv6', port: 37548 },
     [Symbol(asyncId)]: 930,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 932,
     [Symbol(triggerAsyncId)]: 930 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/api',
  originalUrl: '/api/auth',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/auth',
     path: '/auth',
     href: '/auth',
     _raw: '/auth' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Array], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 165565,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object],
        [Symbol(asyncId)]: 930,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 932,
        [Symbol(triggerAsyncId)]: 930 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 165565,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object],
        [Symbol(asyncId)]: 930,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 932,
        [Symbol(triggerAsyncId)]: 930 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Array] },
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _startAt: [ 7861913, 933550326 ],
  _startTime: 2022-06-06T20:52:31.621Z,
  _remoteAddress: '::ffff:10.128.0.22',
  body: 
   { email: 'miltonjesusvc@ufps.edu.co',
     password: 'Pr0f3s0r2022.',
     code: 0,
     type: 0 },
  _body: true,
  length: undefined,
  read: [Function],
  secret: undefined,
  cookies: 
   { _ga: 'GA1.3.1685976720.1650293779',
     twk_uuid_5f3c9dcdcc6a6a5947aced9b: '{"uuid":"1.4851VSl7aKtmkHV1Tu0iSpqnxnv4RPHU2jCDdLYkdx1WTmxE8V08ZiWRrghFHsTGVjey4li5dA8078LWjy5VGE0n1ElOsOS0QnVR5pWDnrBbdWapWVpnueTLUVtaTfK58HRq4jBdeKmbu1i","version":3,"domain":"ufps.edu.co","ts":1651009198569}',
     'AMCV_4D6368F454EC41940A4C98A6%40AdobeOrg': '-2121179033|MCIDTS|19109|MCMID|28745598136514628203617591386012588135|MCAAMLH-1651614046|4|MCAAMB-1651614046|RKhpRz8krg2tLO6pguXWp5olkAcUniQYPHaMWWgdJ3xzPWQmdj0y|MCOPTOUT-1651016446s|NONE|MCAID|NONE|MCSYNCSOP|411-19116|MCCIDH|1483836512|vVersion|5.3.0',
     mbox: 'session#a3bcfeec4d3d4646a7431b6a383a58b7#1651011907|PC#a3bcfeec4d3d4646a7431b6a383a58b7.34_0#1714254847',
     s_pers: ' v8=1651010047545|1745618047545; v8_s=First%20Visit|1651011847545; c19=sc%3Asearch%3Adocument%20results|1651011847549; v68=1651010045843|1651011847561;',
     _gid: 'GA1.3.385273413.1654524735' },
  signedCookies: {},
  route: Route { path: '/auth', stack: [ [Object] ], methods: { post: true } } }
Executing (default): SELECT `id`, `name`, `email`, `password`, `code`, `type`, `username`, `socket_id`, `education_level`, `institution`, `profile_image_url`, `status_learning`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt` FROM `users` AS `users` WHERE `users`.`email` = 'miltonjesusvc@ufps.edu.co';
[0mPOST /api/auth [33m401 [0m46.497 ms - 28[0m
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 263865,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1654548849931,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::ffff:10.128.0.22', family: 'IPv6', port: 37550 },
     [Symbol(asyncId)]: 1012,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 1013,
     [Symbol(triggerAsyncId)]: 1012 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 263865,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1654548849931,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::ffff:10.128.0.22', family: 'IPv6', port: 37550 },
     [Symbol(asyncId)]: 1012,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 1013,
     [Symbol(triggerAsyncId)]: 1012 },
  httpVersionMajor: 1,
  httpVersionMinor: 0,
  httpVersion: '1.0',
  complete: true,
  headers: 
   { host: 'trainingcenter.cloud.ufps.edu.co',
     'x-real-ip': '200.93.148.10',
     'x-forwarded-for': '200.93.148.10',
     'x-forwarded-proto': 'https',
     connection: 'close',
     'content-length': '64',
     'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
     'sec-ch-ua-mobile': '?0',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
     'sec-ch-ua-platform': '"Linux"',
     'content-type': 'application/json',
     accept: '*/*',
     origin: 'https://trainingcenter.cloud.ufps.edu.co',
     'sec-fetch-site': 'same-origin',
     'sec-fetch-mode': 'cors',
     'sec-fetch-dest': 'empty',
     referer: 'https://trainingcenter.cloud.ufps.edu.co/bienvenido',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'es-419,es;q=0.9,en;q=0.8',
     cookie: '_ga=GA1.3.1685976720.1650293779; twk_uuid_5f3c9dcdcc6a6a5947aced9b=%7B%22uuid%22%3A%221.4851VSl7aKtmkHV1Tu0iSpqnxnv4RPHU2jCDdLYkdx1WTmxE8V08ZiWRrghFHsTGVjey4li5dA8078LWjy5VGE0n1ElOsOS0QnVR5pWDnrBbdWapWVpnueTLUVtaTfK58HRq4jBdeKmbu1i%22%2C%22version%22%3A3%2C%22domain%22%3A%22ufps.edu.co%22%2C%22ts%22%3A1651009198569%7D; AMCV_4D6368F454EC41940A4C98A6%40AdobeOrg=-2121179033%7CMCIDTS%7C19109%7CMCMID%7C28745598136514628203617591386012588135%7CMCAAMLH-1651614046%7C4%7CMCAAMB-1651614046%7CRKhpRz8krg2tLO6pguXWp5olkAcUniQYPHaMWWgdJ3xzPWQmdj0y%7CMCOPTOUT-1651016446s%7CNONE%7CMCAID%7CNONE%7CMCSYNCSOP%7C411-19116%7CMCCIDH%7C1483836512%7CvVersion%7C5.3.0; mbox=session#a3bcfeec4d3d4646a7431b6a383a58b7#1651011907|PC#a3bcfeec4d3d4646a7431b6a383a58b7.34_0#1714254847; s_pers=%20v8%3D1651010047545%7C1745618047545%3B%20v8_s%3DFirst%2520Visit%7C1651011847545%3B%20c19%3Dsc%253Asearch%253Adocument%2520results%7C1651011847549%3B%20v68%3D1651010045843%7C1651011847561%3B; _gid=GA1.3.385273413.1654524735' },
  rawHeaders: 
   [ 'Host',
     'trainingcenter.cloud.ufps.edu.co',
     'X-Real-IP',
     '200.93.148.10',
     'X-Forwarded-For',
     '200.93.148.10',
     'X-Forwarded-Proto',
     'https',
     'Connection',
     'close',
     'Content-Length',
     '64',
     'sec-ch-ua',
     '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
     'sec-ch-ua-mobile',
     '?0',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
     'sec-ch-ua-platform',
     '"Linux"',
     'Content-Type',
     'application/json',
     'Accept',
     '*/*',
     'Origin',
     'https://trainingcenter.cloud.ufps.edu.co',
     'Sec-Fetch-Site',
     'same-origin',
     'Sec-Fetch-Mode',
     'cors',
     'Sec-Fetch-Dest',
     'empty',
     'Referer',
     'https://trainingcenter.cloud.ufps.edu.co/bienvenido',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'es-419,es;q=0.9,en;q=0.8',
     'Cookie',
     '_ga=GA1.3.1685976720.1650293779; twk_uuid_5f3c9dcdcc6a6a5947aced9b=%7B%22uuid%22%3A%221.4851VSl7aKtmkHV1Tu0iSpqnxnv4RPHU2jCDdLYkdx1WTmxE8V08ZiWRrghFHsTGVjey4li5dA8078LWjy5VGE0n1ElOsOS0QnVR5pWDnrBbdWapWVpnueTLUVtaTfK58HRq4jBdeKmbu1i%22%2C%22version%22%3A3%2C%22domain%22%3A%22ufps.edu.co%22%2C%22ts%22%3A1651009198569%7D; AMCV_4D6368F454EC41940A4C98A6%40AdobeOrg=-2121179033%7CMCIDTS%7C19109%7CMCMID%7C28745598136514628203617591386012588135%7CMCAAMLH-1651614046%7C4%7CMCAAMB-1651614046%7CRKhpRz8krg2tLO6pguXWp5olkAcUniQYPHaMWWgdJ3xzPWQmdj0y%7CMCOPTOUT-1651016446s%7CNONE%7CMCAID%7CNONE%7CMCSYNCSOP%7C411-19116%7CMCCIDH%7C1483836512%7CvVersion%7C5.3.0; mbox=session#a3bcfeec4d3d4646a7431b6a383a58b7#1651011907|PC#a3bcfeec4d3d4646a7431b6a383a58b7.34_0#1714254847; s_pers=%20v8%3D1651010047545%7C1745618047545%3B%20v8_s%3DFirst%2520Visit%7C1651011847545%3B%20c19%3Dsc%253Asearch%253Adocument%2520results%7C1651011847549%3B%20v68%3D1651010045843%7C1651011847561%3B; _gid=GA1.3.385273413.1654524735' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/auth',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 263865,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1654548849931,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::ffff:10.128.0.22', family: 'IPv6', port: 37550 },
     [Symbol(asyncId)]: 1012,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 1013,
     [Symbol(triggerAsyncId)]: 1012 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/api',
  originalUrl: '/api/auth',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/auth',
     path: '/auth',
     href: '/auth',
     _raw: '/auth' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Array], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 263865,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object],
        [Symbol(asyncId)]: 1012,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 1013,
        [Symbol(triggerAsyncId)]: 1012 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 263865,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object],
        [Symbol(asyncId)]: 1012,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 1013,
        [Symbol(triggerAsyncId)]: 1012 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Array] },
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _startAt: [ 7862012, 244081844 ],
  _startTime: 2022-06-06T20:54:09.932Z,
  _remoteAddress: '::ffff:10.128.0.22',
  body: 
   { email: 'miltonjesusvc@ufps.edu.co',
     password: 'Pr0f3s0r2019.' },
  _body: true,
  length: undefined,
  read: [Function],
  secret: undefined,
  cookies: 
   { _ga: 'GA1.3.1685976720.1650293779',
     twk_uuid_5f3c9dcdcc6a6a5947aced9b: '{"uuid":"1.4851VSl7aKtmkHV1Tu0iSpqnxnv4RPHU2jCDdLYkdx1WTmxE8V08ZiWRrghFHsTGVjey4li5dA8078LWjy5VGE0n1ElOsOS0QnVR5pWDnrBbdWapWVpnueTLUVtaTfK58HRq4jBdeKmbu1i","version":3,"domain":"ufps.edu.co","ts":1651009198569}',
     'AMCV_4D6368F454EC41940A4C98A6%40AdobeOrg': '-2121179033|MCIDTS|19109|MCMID|28745598136514628203617591386012588135|MCAAMLH-1651614046|4|MCAAMB-1651614046|RKhpRz8krg2tLO6pguXWp5olkAcUniQYPHaMWWgdJ3xzPWQmdj0y|MCOPTOUT-1651016446s|NONE|MCAID|NONE|MCSYNCSOP|411-19116|MCCIDH|1483836512|vVersion|5.3.0',
     mbox: 'session#a3bcfeec4d3d4646a7431b6a383a58b7#1651011907|PC#a3bcfeec4d3d4646a7431b6a383a58b7.34_0#1714254847',
     s_pers: ' v8=1651010047545|1745618047545; v8_s=First%20Visit|1651011847545; c19=sc%3Asearch%3Adocument%20results|1651011847549; v68=1651010045843|1651011847561;',
     _gid: 'GA1.3.385273413.1654524735' },
  signedCookies: {},
  route: Route { path: '/auth', stack: [ [Object] ], methods: { post: true } } }
Executing (default): SELECT `id`, `name`, `email`, `password`, `code`, `type`, `username`, `socket_id`, `education_level`, `institution`, `profile_image_url`, `status_learning`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt` FROM `users` AS `users` WHERE `users`.`email` = 'miltonjesusvc@ufps.edu.co';
[0mPOST /api/auth [33m401 [0m23.920 ms - 28[0m
Executing (default): SELECT `materials`.`id`, `materials`.`name`, `materials`.`category_id`, `materials`.`description`, `materials`.`url`, `materials`.`user_id`, `user`.`name` AS `user.name`, `user`.`id` AS `user.id`, `user`.`username` AS `user.username`, `category`.`name` AS `category.name`, `category`.`id` AS `category.id` FROM `materials` AS `materials` LEFT OUTER JOIN `users` AS `user` ON `materials`.`user_id` = `user`.`id` LEFT OUTER JOIN `categories` AS `category` ON `materials`.`category_id` = `category`.`id` WHERE `materials`.`id` = '61' AND `materials`.`status` = true;
[0mGET /api/materials/61 [32m200 [0m19.907 ms - 331[0m
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 297845,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1654548883911,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::ffff:10.128.0.22', family: 'IPv6', port: 37554 },
     [Symbol(asyncId)]: 1152,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 1154,
     [Symbol(triggerAsyncId)]: 1152 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 297845,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1654548883911,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::ffff:10.128.0.22', family: 'IPv6', port: 37554 },
     [Symbol(asyncId)]: 1152,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 1154,
     [Symbol(triggerAsyncId)]: 1152 },
  httpVersionMajor: 1,
  httpVersionMinor: 0,
  httpVersion: '1.0',
  complete: true,
  headers: 
   { host: 'trainingcenter.cloud.ufps.edu.co',
     'x-real-ip': '201.221.178.62',
     'x-forwarded-for': '201.221.178.62',
     'x-forwarded-proto': 'https',
     connection: 'close',
     'content-length': '89',
     'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="102", "Google Chrome";v="102"',
     'sec-ch-ua-mobile': '?0',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.5005.63 Safari/537.36',
     'sec-ch-ua-platform': '"Windows"',
     'content-type': 'application/json',
     accept: '*/*',
     origin: 'https://trainingcenter.cloud.ufps.edu.co',
     'sec-fetch-site': 'same-origin',
     'sec-fetch-mode': 'cors',
     'sec-fetch-dest': 'empty',
     referer: 'https://trainingcenter.cloud.ufps.edu.co/bienvenido',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'es-419,es;q=0.9,en;q=0.8',
     cookie: '_ga=GA1.3.1162124911.1639489805; _lr_geo_location=CO' },
  rawHeaders: 
   [ 'Host',
     'trainingcenter.cloud.ufps.edu.co',
     'X-Real-IP',
     '201.221.178.62',
     'X-Forwarded-For',
     '201.221.178.62',
     'X-Forwarded-Proto',
     'https',
     'Connection',
     'close',
     'Content-Length',
     '89',
     'sec-ch-ua',
     '" Not A;Brand";v="99", "Chromium";v="102", "Google Chrome";v="102"',
     'sec-ch-ua-mobile',
     '?0',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.5005.63 Safari/537.36',
     'sec-ch-ua-platform',
     '"Windows"',
     'Content-Type',
     'application/json',
     'Accept',
     '*/*',
     'Origin',
     'https://trainingcenter.cloud.ufps.edu.co',
     'Sec-Fetch-Site',
     'same-origin',
     'Sec-Fetch-Mode',
     'cors',
     'Sec-Fetch-Dest',
     'empty',
     'Referer',
     'https://trainingcenter.cloud.ufps.edu.co/bienvenido',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'es-419,es;q=0.9,en;q=0.8',
     'Cookie',
     '_ga=GA1.3.1162124911.1639489805; _lr_geo_location=CO' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/auth',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 297845,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1654548883911,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::ffff:10.128.0.22', family: 'IPv6', port: 37554 },
     [Symbol(asyncId)]: 1152,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 1154,
     [Symbol(triggerAsyncId)]: 1152 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/api',
  originalUrl: '/api/auth',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/auth',
     path: '/auth',
     href: '/auth',
     _raw: '/auth' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Array], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 297845,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object],
        [Symbol(asyncId)]: 1152,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 1154,
        [Symbol(triggerAsyncId)]: 1152 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 297845,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object],
        [Symbol(asyncId)]: 1152,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 1154,
        [Symbol(triggerAsyncId)]: 1152 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Array] },
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _startAt: [ 7862046, 223647248 ],
  _startTime: 2022-06-06T20:54:43.912Z,
  _remoteAddress: '::ffff:10.128.0.22',
  body: 
   { email: 'programacioncompetitivaufps@gmail.com',
     password: '75eRKTsB',
     code: 0,
     type: 0 },
  _body: true,
  length: undefined,
  read: [Function],
  secret: undefined,
  cookies: { _ga: 'GA1.3.1162124911.1639489805', _lr_geo_location: 'CO' },
  signedCookies: {},
  route: Route { path: '/auth', stack: [ [Object] ], methods: { post: true } } }
Executing (default): SELECT `id`, `name`, `email`, `password`, `code`, `type`, `username`, `socket_id`, `education_level`, `institution`, `profile_image_url`, `status_learning`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt` FROM `users` AS `users` WHERE `users`.`email` = 'programacioncompetitivaufps@gmail.com';
[0mPOST /api/auth [33m401 [0m24.834 ms - 28[0m
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 360225,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1654548946291,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::ffff:10.128.0.22', family: 'IPv6', port: 37556 },
     [Symbol(asyncId)]: 1234,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 1235,
     [Symbol(triggerAsyncId)]: 1234 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 360225,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1654548946291,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::ffff:10.128.0.22', family: 'IPv6', port: 37556 },
     [Symbol(asyncId)]: 1234,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 1235,
     [Symbol(triggerAsyncId)]: 1234 },
  httpVersionMajor: 1,
  httpVersionMinor: 0,
  httpVersion: '1.0',
  complete: true,
  headers: 
   { host: 'trainingcenter.cloud.ufps.edu.co',
     'x-real-ip': '200.93.148.10',
     'x-forwarded-for': '200.93.148.10',
     'x-forwarded-proto': 'https',
     connection: 'close',
     'content-length': '64',
     'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
     'sec-ch-ua-mobile': '?0',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
     'sec-ch-ua-platform': '"Linux"',
     'content-type': 'application/json',
     accept: '*/*',
     origin: 'https://trainingcenter.cloud.ufps.edu.co',
     'sec-fetch-site': 'same-origin',
     'sec-fetch-mode': 'cors',
     'sec-fetch-dest': 'empty',
     referer: 'https://trainingcenter.cloud.ufps.edu.co/bienvenido',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'es-419,es;q=0.9,en;q=0.8',
     cookie: '_ga=GA1.3.1685976720.1650293779; twk_uuid_5f3c9dcdcc6a6a5947aced9b=%7B%22uuid%22%3A%221.4851VSl7aKtmkHV1Tu0iSpqnxnv4RPHU2jCDdLYkdx1WTmxE8V08ZiWRrghFHsTGVjey4li5dA8078LWjy5VGE0n1ElOsOS0QnVR5pWDnrBbdWapWVpnueTLUVtaTfK58HRq4jBdeKmbu1i%22%2C%22version%22%3A3%2C%22domain%22%3A%22ufps.edu.co%22%2C%22ts%22%3A1651009198569%7D; AMCV_4D6368F454EC41940A4C98A6%40AdobeOrg=-2121179033%7CMCIDTS%7C19109%7CMCMID%7C28745598136514628203617591386012588135%7CMCAAMLH-1651614046%7C4%7CMCAAMB-1651614046%7CRKhpRz8krg2tLO6pguXWp5olkAcUniQYPHaMWWgdJ3xzPWQmdj0y%7CMCOPTOUT-1651016446s%7CNONE%7CMCAID%7CNONE%7CMCSYNCSOP%7C411-19116%7CMCCIDH%7C1483836512%7CvVersion%7C5.3.0; mbox=session#a3bcfeec4d3d4646a7431b6a383a58b7#1651011907|PC#a3bcfeec4d3d4646a7431b6a383a58b7.34_0#1714254847; s_pers=%20v8%3D1651010047545%7C1745618047545%3B%20v8_s%3DFirst%2520Visit%7C1651011847545%3B%20c19%3Dsc%253Asearch%253Adocument%2520results%7C1651011847549%3B%20v68%3D1651010045843%7C1651011847561%3B; _gid=GA1.3.385273413.1654524735' },
  rawHeaders: 
   [ 'Host',
     'trainingcenter.cloud.ufps.edu.co',
     'X-Real-IP',
     '200.93.148.10',
     'X-Forwarded-For',
     '200.93.148.10',
     'X-Forwarded-Proto',
     'https',
     'Connection',
     'close',
     'Content-Length',
     '64',
     'sec-ch-ua',
     '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
     'sec-ch-ua-mobile',
     '?0',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',
     'sec-ch-ua-platform',
     '"Linux"',
     'Content-Type',
     'application/json',
     'Accept',
     '*/*',
     'Origin',
     'https://trainingcenter.cloud.ufps.edu.co',
     'Sec-Fetch-Site',
     'same-origin',
     'Sec-Fetch-Mode',
     'cors',
     'Sec-Fetch-Dest',
     'empty',
     'Referer',
     'https://trainingcenter.cloud.ufps.edu.co/bienvenido',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'es-419,es;q=0.9,en;q=0.8',
     'Cookie',
     '_ga=GA1.3.1685976720.1650293779; twk_uuid_5f3c9dcdcc6a6a5947aced9b=%7B%22uuid%22%3A%221.4851VSl7aKtmkHV1Tu0iSpqnxnv4RPHU2jCDdLYkdx1WTmxE8V08ZiWRrghFHsTGVjey4li5dA8078LWjy5VGE0n1ElOsOS0QnVR5pWDnrBbdWapWVpnueTLUVtaTfK58HRq4jBdeKmbu1i%22%2C%22version%22%3A3%2C%22domain%22%3A%22ufps.edu.co%22%2C%22ts%22%3A1651009198569%7D; AMCV_4D6368F454EC41940A4C98A6%40AdobeOrg=-2121179033%7CMCIDTS%7C19109%7CMCMID%7C28745598136514628203617591386012588135%7CMCAAMLH-1651614046%7C4%7CMCAAMB-1651614046%7CRKhpRz8krg2tLO6pguXWp5olkAcUniQYPHaMWWgdJ3xzPWQmdj0y%7CMCOPTOUT-1651016446s%7CNONE%7CMCAID%7CNONE%7CMCSYNCSOP%7C411-19116%7CMCCIDH%7C1483836512%7CvVersion%7C5.3.0; mbox=session#a3bcfeec4d3d4646a7431b6a383a58b7#1651011907|PC#a3bcfeec4d3d4646a7431b6a383a58b7.34_0#1714254847; s_pers=%20v8%3D1651010047545%7C1745618047545%3B%20v8_s%3DFirst%2520Visit%7C1651011847545%3B%20c19%3Dsc%253Asearch%253Adocument%2520results%7C1651011847549%3B%20v68%3D1651010045843%7C1651011847561%3B; _gid=GA1.3.385273413.1654524735' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/auth',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8081',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 910 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 360225,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1654548946291,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::ffff:10.128.0.22', family: 'IPv6', port: 37556 },
     [Symbol(asyncId)]: 1234,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 1235,
     [Symbol(triggerAsyncId)]: 1234 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/api',
  originalUrl: '/api/auth',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/auth',
     path: '/auth',
     href: '/auth',
     _raw: '/auth' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Array], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 360225,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object],
        [Symbol(asyncId)]: 1234,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 1235,
        [Symbol(triggerAsyncId)]: 1234 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 360225,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object],
        [Symbol(asyncId)]: 1234,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 1235,
        [Symbol(triggerAsyncId)]: 1234 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Array] },
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _startAt: [ 7862108, 603983138 ],
  _startTime: 2022-06-06T20:55:46.292Z,
  _remoteAddress: '::ffff:10.128.0.22',
  body: 
   { email: 'miltonjesusvc@ufps.edu.co',
     password: 'Pr0f3s0r2019.' },
  _body: true,
  length: undefined,
  read: [Function],
  secret: undefined,
  cookies: 
   { _ga: 'GA1.3.1685976720.1650293779',
     twk_uuid_5f3c9dcdcc6a6a5947aced9b: '{"uuid":"1.4851VSl7aKtmkHV1Tu0iSpqnxnv4RPHU2jCDdLYkdx1WTmxE8V08ZiWRrghFHsTGVjey4li5dA8078LWjy5VGE0n1ElOsOS0QnVR5pWDnrBbdWapWVpnueTLUVtaTfK58HRq4jBdeKmbu1i","version":3,"domain":"ufps.edu.co","ts":1651009198569}',
     'AMCV_4D6368F454EC41940A4C98A6%40AdobeOrg': '-2121179033|MCIDTS|19109|MCMID|28745598136514628203617591386012588135|MCAAMLH-1651614046|4|MCAAMB-1651614046|RKhpRz8krg2tLO6pguXWp5olkAcUniQYPHaMWWgdJ3xzPWQmdj0y|MCOPTOUT-1651016446s|NONE|MCAID|NONE|MCSYNCSOP|411-19116|MCCIDH|1483836512|vVersion|5.3.0',
     mbox: 'session#a3bcfeec4d3d4646a7431b6a383a58b7#1651011907|PC#a3bcfeec4d3d4646a7431b6a383a58b7.34_0#1714254847',
     s_pers: ' v8=1651010047545|1745618047545; v8_s=First%20Visit|1651011847545; c19=sc%3Asearch%3Adocument%20results|1651011847549; v68=1651010045843|1651011847561;',
     _gid: 'GA1.3.385273413.1654524735' },
  signedCookies: {},
  route: Route { path: '/auth', stack: [ [Object] ], methods: { post: true } } }
Executing (default): SELECT `id`, `name`, `email`, `password`, `code`, `type`, `username`, `socket_id`, `education_level`, `institution`, `profile_image_url`, `status_learning`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt` FROM `users` AS `users` WHERE `users`.`email` = 'miltonjesusvc@ufps.edu.co';
[0mPOST /api/auth [33m401 [0m21.957 ms - 28[0m
